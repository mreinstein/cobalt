var Ce=Object.defineProperty;var Ee=(t,e)=>{for(var r in e)Ce(t,r,{get:e[r],enumerable:!0})};function b(t,e,r,i,a,o,n){let f=t.createTexture({label:e,size:{width:r,height:i},format:o,usage:n,mipLevelCount:a,sampleCount:1,dimension:"2d"}),u=f.createView(),c=[];for(let l=0;l<a;l++)c.push(f.createView({label:e,format:o,dimension:"2d",aspect:"all",baseMipLevel:l,mipLevelCount:1,baseArrayLayer:0,arrayLayerCount:1}));let s=t.createSampler({label:`${e} sampler`,addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"});return{size:{width:r,height:i},texture:f,view:u,mip_view:c,sampler:s}}async function S(t,e,r,i="rgba8unorm"){let o=await(await fetch(r)).blob(),n=await createImageBitmap(o),f=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT,c=b(t.device,e,n.width,n.height,1,i,f);t.device.queue.copyExternalImageToTexture({source:n},{texture:c.texture},{width:n.width,height:n.height});let s={addressModeU:"repeat",addressModeV:"repeat",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",maxAnisotropy:1};return c.sampler=t.device.createSampler(s),c}var k="const BLOOM_MIP_COUNT:i32=7;const MODE_PREFILTER:u32=0u;const MODE_DOWNSAMPLE:u32=1u;const MODE_UPSAMPLE_FIRST:u32=2u;const MODE_UPSAMPLE:u32=3u;const EPSILON:f32=1.0e-4;struct bloom_param{parameters:vec4<f32>,combine_constant:f32,doop:u32,ferp:u32,}struct mode_lod_param{mode_lod:u32,}@group(0)@binding(0)var output_texture:texture_storage_2d<rgba16float,write>;@group(0)@binding(1)var input_texture:texture_2d<f32>;@group(0)@binding(2)var bloom_texture:texture_2d<f32>;@group(0)@binding(3)var samp:sampler;@group(0)@binding(4)var<uniform> param:bloom_param;@group(0)@binding(5)var<uniform> pc:mode_lod_param;fn QuadraticThreshold(color:vec4<f32>,threshold:f32,curve:vec3<f32>)->vec4<f32>{let brightness=max(max(color.r,color.g),color.b);var rq:f32=clamp(brightness-curve.x,0.0,curve.y);rq=curve.z*(rq*rq);let ret_color=color*max(rq,brightness-threshold)/max(brightness,EPSILON);return ret_color;}fn Prefilter(color:vec4<f32>,uv:vec2<f32>)->vec4<f32>{let clamp_value=20.0;var c=min(vec4<f32>(clamp_value),color);c=QuadraticThreshold(color,param.parameters.x,param.parameters.yzw);return c;}fn DownsampleBox13(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,tex_size:vec2<f32>)->vec3<f32>{let A=textureSampleLevel(tex,samp,uv,lod).rgb;let texel_size=tex_size*0.5;let B=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,-1.0),lod).rgb;let C=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,1.0),lod).rgb;let D=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,1.0),lod).rgb;let E=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,-1.0),lod).rgb;let F=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let G=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,0.0),lod).rgb;let H=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,2.0),lod).rgb;let I=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let J=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let K=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,0.0),lod).rgb;let L=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let M=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,-2.0),lod).rgb;var result:vec3<f32>=vec3<f32>(0.0);result=result+(B+C+D+E)*0.5;result=result+(F+G+A+M)*0.125;result=result+(G+H+I+A)*0.125;result=result+(A+I+J+K)*0.125;result=result+(M+A+K+L)*0.125;result=result*0.25;return result;}fn UpsampleTent9(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,texel_size:vec2<f32>,radius:f32)->vec3<f32>{let offset=texel_size.xyxy*vec4<f32>(1.0,1.0,-1.0,0.0)*radius;var result:vec3<f32>=textureSampleLevel(tex,samp,uv,lod).rgb*4.0;result=result+textureSampleLevel(tex,samp,uv-offset.xy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv-offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv-offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.zw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xy,lod).rgb;return result*(1.0/16.0);}fn combine(ex_color:vec3<f32>,color_to_add:vec3<f32>,combine_constant:f32)->vec3<f32>{let existing_color=ex_color+(-color_to_add);let blended_color=(combine_constant*existing_color)+color_to_add;return blended_color;}@compute @workgroup_size(8,4,1)fn cs_main(@builtin(global_invocation_id)global_invocation_id:vec3<u32>){let mode=pc.mode_lod>>16u;let lod=pc.mode_lod&65535u;let imgSize=textureDimensions(output_texture);if(global_invocation_id.x<=u32(imgSize.x)&&global_invocation_id.y<=u32(imgSize.y)){var texCoords:vec2<f32>=vec2<f32>(f32(global_invocation_id.x)/f32(imgSize.x),f32(global_invocation_id.y)/f32(imgSize.y));texCoords=texCoords+(1.0/vec2<f32>(imgSize))*0.5;let texSize=vec2<f32>(textureDimensions(input_texture,i32(lod)));var color:vec4<f32>=vec4<f32>(1.0);if(mode==MODE_PREFILTER){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);color=Prefilter(color,texCoords);}else if(mode==MODE_DOWNSAMPLE){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);}else if(mode==MODE_UPSAMPLE_FIRST){let bloomTexSize=textureDimensions(input_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(input_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}else if(mode==MODE_UPSAMPLE){let bloomTexSize=textureDimensions(bloom_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(bloom_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}textureStore(output_texture,vec2<i32>(global_invocation_id.xy),color);}}";var w=7,Ge=0,Q=1,Ue=2,K=3,$={type:"bloom",refs:[{name:"emissive",type:"textureView",format:"rgba16",access:"read"},{name:"hdr",type:"textureView",format:"rgba16",access:"read"},{name:"bloom",type:"textureView",format:"rgba16",access:"readwrite"}],onInit:async function(t,e={}){return Fe(t,e)},onRun:function(t,e,r){Pe(t,e.data,r)},onDestroy:function(t,e){Z(e)},onResize:function(t,e){Me(t,e)},onViewportPosition:function(t,e){}};function Fe(t,e){let{device:r}=t,i=t.viewport.width,a=t.viewport.height,o={compute_pipeline:null,bind_group:[],bind_group_layout:[],bind_groups_textures:[]},n=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:"write-only",format:"rgba16float",viewDimension:"2d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:2,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:3,visibility:GPUShaderStage.COMPUTE,sampler:{}},{binding:4,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:5,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}]});o.bind_group_layout.push(n),o.bind_groups_textures.push(b(r,"bloom downsampler image 0",i/2,a/2,w,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(b(r,"bloom downsampler image 1",i/2,a/2,w,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(e.refs.bloom.data);let f=r.createPipelineLayout({bindGroupLayouts:o.bind_group_layout}),u=r.createComputePipeline({layout:f,compute:{module:r.createShaderModule({code:k}),entryPoint:"cs_main"}});return J(t,o,e),o.compute_pipeline=u,o}function J(t,e,r){let{refs:i}=r,{device:a}=t,o=r.options.bloom_threshold??.1,n=r.options.bloom_knee??.2,f=r.options.bloom_combine_constant??.68,u=new Float32Array([o,o-n,n*2,.25/n,f,0,0,0]),c=a.createBuffer({label:"bloom static parameters buffer",size:u.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(c.getMappedRange()).set(u),c.unmap(),e.bind_group.length=0,e.params_buf=c,e.bind_group.push(B(a,e,e.bind_groups_textures[0].mip_view[0],i.emissive.data.view,i.hdr.data.view,i.hdr.data.sampler,c,Ge<<16|0));for(let l=1;l<w;l++)e.bind_group.push(B(a,e,e.bind_groups_textures[1].mip_view[l],e.bind_groups_textures[0].view,i.hdr.data.view,i.hdr.data.sampler,c,Q<<16|l-1)),e.bind_group.push(B(a,e,e.bind_groups_textures[0].mip_view[l],e.bind_groups_textures[1].view,i.hdr.data.view,i.hdr.data.sampler,c,Q<<16|l));e.bind_group.push(B(a,e,e.bind_groups_textures[2].mip_view[w-1],e.bind_groups_textures[0].view,i.hdr.data.view,i.hdr.data.sampler,c,Ue<<16|w-2));let s=!0;for(let l=w-2;l>=0;l--)s?(e.bind_group.push(B(a,e,e.bind_groups_textures[1].mip_view[l],e.bind_groups_textures[0].view,e.bind_groups_textures[2].view,i.hdr.data.sampler,c,K<<16|l)),s=!1):(e.bind_group.push(B(a,e,e.bind_groups_textures[2].mip_view[l],e.bind_groups_textures[0].view,e.bind_groups_textures[1].view,i.hdr.data.sampler,c,K<<16|l)),s=!0)}function B(t,e,r,i,a,o,n,f){let u=new Uint32Array([f]),c=t.createBuffer({label:"bloom static mode_lod buffer",size:u.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});return new Uint32Array(c.getMappedRange()).set(u),c.unmap(),t.createBindGroup({label:"bloom bind group layout",layout:e.bind_group_layout[0],entries:[{binding:0,resource:r},{binding:1,resource:i},{binding:2,resource:a},{binding:3,resource:o},{binding:4,resource:{buffer:n}},{binding:5,resource:{buffer:c}}]})}function Pe(t,e,r){let f=0,u=r.beginComputePass({label:"bloom Compute Pass"});u.setPipeline(e.compute_pipeline),u.setBindGroup(0,e.bind_group[f]),f+=1;let c=z(0,e.bind_groups_textures[0]);u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let s=1;s<w;s++)c=z(s,e.bind_groups_textures[0]),u.setBindGroup(0,e.bind_group[f]),f+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1),u.setBindGroup(0,e.bind_group[f]),f+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);u.setBindGroup(0,e.bind_group[f]),f+=1,c=z(w-1,e.bind_groups_textures[2]),u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let s=w-2;s>=0;s--)c=z(s,e.bind_groups_textures[2]),u.setBindGroup(0,e.bind_group[f]),f+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);u.end()}function z(t,e){let r=e.size.width,i=e.size.height;for(let a=0;a<t;a++)r/=2,i/=2;return{width:r,height:i,depthOrArrayLayers:1}}function Me(t,e){let{device:r}=t,i=e.data;Z(i),i.bind_groups_textures.push(b(r,"bloom downsampler image 0",t.viewport.width/2,t.viewport.height/2,w,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),i.bind_groups_textures.push(b(r,"bloom downsampler image 1",t.viewport.width/2,t.viewport.height/2,w,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),i.bind_groups_textures.push(e.refs.bloom.data),J(t,i,e)}function Z(t){for(let e of t.bind_groups_textures)e.texture.destroy();t.bind_groups_textures.length=0}var I="struct BloomComposite{bloom_intensity:f32,bloom_combine_constant:f32,}@group(0)@binding(0)var mySampler:sampler;@group(0)@binding(1)var colorTexture:texture_2d<f32>;@group(0)@binding(2)var emissiveTexture:texture_2d<f32>;@group(0)@binding(3)var<uniform> composite_parameter:BloomComposite;struct VertexOutput{@builtin(position)Position:vec4<f32>,@location(0)fragUV:vec2<f32>,}@vertex fn vert_main(@builtin(vertex_index)VertexIndex:u32)->VertexOutput{const pos=array(vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0),);const uv=array(vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,0.0),);var output:VertexOutput;output.Position=vec4(pos[VertexIndex],0.0,1.0);output.fragUV=uv[VertexIndex];return output;}fn GTTonemap_point(x:f32)->f32{let m:f32=0.22;let a:f32=1.0;let c:f32=1.33;let P:f32=1.0;let l:f32=0.4;let l0:f32=((P-m)*l)/a;let S0:f32=m+l0;let S1:f32=m+a*l0;let C2:f32=(a*P)/(P-S1);let L:f32=m+a*(x-m);let T:f32=m*pow(x/m,c);let S:f32=P-(P-S1)*exp(-C2*(x-S0)/P);let w0:f32=1.0-smoothstep(0.0,m,x);var w2:f32=1.0;if(x<m+l){w2=0.0;}let w1:f32=1.0-w0-w2;return f32(T*w0+L*w1+S*w2);}fn GTTonemap(x:vec3<f32>)->vec3<f32>{return vec3<f32>(GTTonemap_point(x.r),GTTonemap_point(x.g),GTTonemap_point(x.b));}fn aces(x:vec3<f32>)->vec3<f32>{let a:f32=2.51;let b:f32=0.03;let c:f32=2.43;let d:f32=0.59;let e:f32=0.14;return clamp((x*(a*x+b))/(x*(c*x+d)+e),vec3<f32>(0.0),vec3<f32>(1.0));}@fragment fn frag_main(@location(0)fragUV:vec2<f32>)->@location(0)vec4<f32>{let hdr_color=textureSample(colorTexture,mySampler,fragUV);let bloom_color=textureSample(emissiveTexture,mySampler,fragUV);let combined_color=((bloom_color*composite_parameter.bloom_intensity)*composite_parameter.bloom_combine_constant);let mapped_color=GTTonemap(combined_color.rgb);let gamma_corrected_color=pow(mapped_color,vec3<f32>(1.0/2.2));return vec4<f32>(gamma_corrected_color+hdr_color.rgb,1.0);}";var ee={type:"bloom",refs:[{name:"hdr",type:"textureView",format:"rgba16",access:"read"},{name:"bloom",type:"textureView",format:"rgba16",access:"read"},{name:"combined",type:"textureView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return ze(t,e)},onRun:function(t,e,r){Re(t,e,r)},onDestroy:function(t,e){},onResize:function(t,e){Ie(t,e)},onViewportPosition:function(t,e){}};function ze(t,e){let{options:r,refs:i}=e,{device:a}=t,o=navigator.gpu.getPreferredCanvasFormat(),n=r.bloom_intensity??40,f=r.bloom_combine_constant??.68,u=new Float32Array([n,f]),c=a.createBuffer({label:"scene composite params buffer",size:u.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(c.getMappedRange()).set(u),c.unmap();let s=a.createRenderPipeline({layout:"auto",vertex:{module:a.createShaderModule({code:I}),entryPoint:"vert_main"},fragment:{module:a.createShaderModule({code:I}),entryPoint:"frag_main",targets:[{format:o}]},primitive:{topology:"triangle-list"}});return{bindGroup:a.createBindGroup({layout:s.getBindGroupLayout(0),entries:[{binding:0,resource:i.hdr.data.sampler},{binding:1,resource:i.hdr.data.view},{binding:2,resource:i.bloom.data.mip_view[0]},{binding:3,resource:{buffer:c}}]}),pipeline:s,params_buf:c}}function Re(t,e,r){let i=r.beginRenderPass({colorAttachments:[{view:e.refs.combined.data.view,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]}),{pipeline:a,bindGroup:o}=e.data;i.setPipeline(a),i.setBindGroup(0,o),i.draw(6,1,0,0),i.end()}function Ie(t,e){let{pipeline:r,params_buf:i}=e.data,{device:a}=t;e.data.bindGroup=a.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:e.refs.hdr.data.sampler},{binding:1,resource:e.refs.hdr.data.view},{binding:2,resource:e.refs.bloom.data.mip_view[0]},{binding:3,resource:{buffer:i}}]})}var U={};Ee(U,{addSprite:()=>Oe,removeSprite:()=>Le,setSprite:()=>Xe,setSpriteName:()=>Ae,setSpriteOpacity:()=>Ye,setSpritePosition:()=>Ve,setSpriteRotation:()=>qe,setSpriteTint:()=>Ne});function O(t,e,r){if(r.spriteCount===0)return 0;let i=0,a=r.spriteCount-1,o=t<<16&16711680|e&65535;for(;i<=a;){let n=r.spriteData[i*12+11];if(o<=n)return i;let f=r.spriteData[a*12+11];if(o>=f)return a+1;let u=Math.floor((i+a)/2),c=r.spriteData[u*12+11];if(o===c)return u+1;o>c?i=u+1:a=u-1}return i}function G(){return Math.ceil(Math.random()*(Number.MAX_SAFE_INTEGER-10))}function Oe(t,e,r,i,a,o,n,f,u){let c=e.refs.spritesheet.data.spritesheet;e=e.data;let s=c.locations.indexOf(r),l=O(u,s,e),x=(l+1)*12;e.spriteData.set(e.spriteData.subarray(l*12,e.spriteCount*12),x),te(e,c,l,r,i,a,o,n,f,u);for(let[d,g]of e.spriteIndices)g>=l&&e.spriteIndices.set(d,g+1);let v=G();return e.spriteIndices.set(v,l),e.spriteCount++,e.dirty=!0,v}function Le(t,e,r){e=e.data;let i=e.spriteIndices.get(r);for(let[o,n]of e.spriteIndices)n>i&&e.spriteIndices.set(o,n-1);let a=i*12;e.spriteData.set(e.spriteData.subarray((i+1)*12,e.spriteCount*12),a),e.spriteIndices.delete(r),e.spriteCount--,e.dirty=!0}function Ae(t,e,r,i,a){let o=e.refs.spritesheet.data.spritesheet;e=e.data;let n=o.locations.indexOf(i),f=o.spriteMeta[i].w,u=o.spriteMeta[i].h,s=e.spriteIndices.get(r)*12;e.spriteData[s+2]=f*a[0],e.spriteData[s+3]=u*a[1];let x=(e.spriteData[s+11]>>16&255)<<16&16711680|n&65535;e.spriteData[s+11]=x,e.dirty=!0}function Ve(t,e,r,i){e=e.data;let o=e.spriteIndices.get(r)*12;e.spriteData[o]=i[0],e.spriteData[o+1]=i[1],e.dirty=!0}function Ne(t,e,r,i){e=e.data;let o=e.spriteIndices.get(r)*12;e.spriteData[o+4]=i[0],e.spriteData[o+5]=i[1],e.spriteData[o+6]=i[2],e.spriteData[o+7]=i[3],e.dirty=!0}function Ye(t,e,r,i){e=e.data;let o=e.spriteIndices.get(r)*12;e.spriteData[o+8]=i,e.dirty=!0}function qe(t,e,r,i){e=e.data;let o=e.spriteIndices.get(r)*12;e.spriteData[o+9]=i,e.dirty=!0}function Xe(t,e,r,i,a,o,n,f,u,c){let s=e.refs.spritesheet.data.spritesheet;e=e.data;let l=e.spriteIndices.get(r);te(e,s,l,i,a,o,n,f,u,c),e.dirty=!0}function te(t,e,r,i,a,o,n,f,u,c){if(!e.spriteMeta[i])throw new Error(`Sprite name ${i} could not be found in the spritesheet metaData`);let s=r*12,l=e.spriteMeta[i].w,x=e.spriteMeta[i].h,v=e.locations.indexOf(i),d=c<<16&16711680|v&65535;t.spriteData[s]=a[0],t.spriteData[s+1]=a[1],t.spriteData[s+2]=l*o[0],t.spriteData[s+3]=x*o[1],t.spriteData[s+4]=n[0],t.spriteData[s+5]=n[1],t.spriteData[s+6]=n[2],t.spriteData[s+7]=n[3],t.spriteData[s+8]=f,t.spriteData[s+9]=u,t.spriteData[s+11]=d}var re={type:"sprite",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"hdr",type:"textureView",format:"rgba16float",access:"write"},{name:"emissive",type:"textureView",format:"rgba16float",access:"write"}],onInit:async function(t,e={}){return We(t,e)},onRun:function(t,e,r){He(t,e,r)},onDestroy:function(t,e){ke(e)},onResize:function(t,e){},onViewportPosition:function(t,e){},customFunctions:{...U}};async function We(t,e){let{device:r}=t,i=16192,a=i,n=Float32Array.BYTES_PER_ELEMENT*2,u=Float32Array.BYTES_PER_ELEMENT*2,s=Float32Array.BYTES_PER_ELEMENT*4,x=Float32Array.BYTES_PER_ELEMENT*4,v=r.createBuffer({size:(n+u+s+x)*a,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),d=e.refs.spritesheet.data,g=r.createBindGroup({layout:e.refs.spritesheet.data.bindGroupLayout,entries:[{binding:0,resource:{buffer:d.uniformBuffer}},{binding:1,resource:d.colorTexture.view},{binding:2,resource:d.colorTexture.sampler},{binding:3,resource:{buffer:v}},{binding:4,resource:d.emissiveTexture.view}]});return{instancedDrawCalls:new Uint32Array(i*2),instancedDrawCallCount:0,bindGroup:g,spriteBuffer:v,spriteData:new Float32Array(i*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function He(t,e,r){let{device:i}=t,a=e.options.loadOp||"load";e.data.dirty&&(je(e.data),e.data.dirty=!1),i.queue.writeBuffer(e.data.spriteBuffer,0,e.data.spriteData.buffer);let o=r.beginRenderPass({colorAttachments:[{view:e.refs.hdr.data.view,clearValue:t.clearValue,loadOp:a,storeOp:"store"},{view:e.refs.emissive.data.view,clearValue:t.clearValue,loadOp:"clear",storeOp:"store"}]});o.setPipeline(e.refs.spritesheet.data.pipeline),o.setBindGroup(0,e.data.bindGroup),o.setVertexBuffer(0,e.refs.spritesheet.data.quads.buffer);let n=6,f=0;for(let u=0;u<e.data.instancedDrawCallCount;u++){let c=e.data.instancedDrawCalls[u*2]*n,s=e.data.instancedDrawCalls[u*2+1];o.draw(n,s,c,f),f+=s}o.end()}function je(t){let e=-1,r=0;t.instancedDrawCallCount=0;for(let i=0;i<t.spriteCount;i++){let a=t.spriteData[i*12+11]&65535;a!==e&&(r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++),e=a,r=0),r++}r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++)}function ke(t){t.data.instancedDrawCalls=null,t.data.bindGroup=null,t.data.spriteBuffer.destroy(),t.data.spriteBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null}var oe={type:"tile",refs:[{name:"tileAtlas",type:"textureView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return Qe(t,e)},onRun:function(t,e,r){Ke(t,e,r)},onDestroy:function(t,e){ie(e)},onResize:function(t,e){},onViewportPosition:function(t,e){},customFunctions:{setTexture:async function(t,e,r){let{device:i}=t;ie(e),e.options.textureUrl=r;let a=await S(t,"tile map",e.options.textureUrl),o=i.createBindGroup({layout:e.refs.tileAtlas.data.tileBindGroupLayout,entries:[{binding:0,resource:{buffer:e.data.uniformBuffer}},{binding:1,resource:a.view},{binding:2,resource:a.sampler}]});e.data.bindGroup=o,e.data.material=a}}};async function Qe(t,e){let{device:r}=t,i=await S(t,"tile map",e.options.textureUrl),a=new Float32Array([e.options.scrollScale,e.options.scrollScale]),o=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,n={size:a.byteLength,usage:o,mappedAtCreation:!0},f=r.createBuffer(n);return new Float32Array(f.getMappedRange()).set(a),f.unmap(),{bindGroup:r.createBindGroup({layout:e.refs.tileAtlas.data.tileBindGroupLayout,entries:[{binding:0,resource:{buffer:f}},{binding:1,resource:i.view},{binding:2,resource:i.sampler}]}),material:i,uniformBuffer:f,scrollScale:e.options.scrollScale}}function Ke(t,e,r){let{device:i}=t,a=e.options.loadOp||"load",o=r.beginRenderPass({colorAttachments:[{view:e.refs.hdr.data.view,clearValue:t.clearValue,loadOp:a,storeOp:"store"}]}),n=e.refs.tileAtlas.data;o.setPipeline(n.pipeline),o.setVertexBuffer(0,n.quad.buffer),o.setBindGroup(0,e.data.bindGroup),o.setBindGroup(1,n.atlasBindGroup),o.draw(6,1,0,0),o.end()}function ie(t){t.data.material.texture.destroy(),t.data.material.texture=void 0}var L="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct displacement_param{offset:vec2<f32>,scale:f32,noop:f32};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var mapTexture:texture_2d<f32>;@binding(4)@group(0)var<uniform> param:displacement_param;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};const sx:f32=1.0;const sy:f32=1.0;const sz:f32=1.0;const tx:f32=1.0;const ty:f32=1.0;const tz:f32=0;const rot:f32=0.0;const s=sin(rot);const c=cos(rot);const scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);const modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;@vertex fn vs_main(@location(0)vertexPosition:vec2<f32>)->Fragment{var output:Fragment;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,0.0,1.0);output.TexCoord=vec2<f32>((output.Position.xy+1.0)/2.0);output.TexCoord.y=1.0-output.TexCoord.y;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{let dims=vec2<f32>(textureDimensions(mapTexture,0));let inv=param.offset/dims;var map:vec4<f32>=textureSample(mapTexture,mySampler,TexCoord+inv);let scale=param.scale;map-=0.5;let invTexSize=1/dims;map.x=scale*invTexSize.x*map.x;map.y=scale*invTexSize.y*map.y;var clamped:vec2<f32>=vec2<f32>(TexCoord.x+map.x,TexCoord.y+map.y);clamped=clamp(clamped,vec2<f32>(0,0),vec2<f32>(1,1));let outColor:vec4<f32>=textureSample(myTexture,mySampler,clamped);return outColor;}";import{default as $t}from"https://cdn.jsdelivr.net/gh/mreinstein/remove-array-items/src/remove-array-items.js";import{default as h}from"https://cdn.skypack.dev/pin/round-half-up-symmetric@v2.0.0-pfMZ4UGGs9FcqO8UiEHO/mode=imports,min/optimized/round-half-up-symmetric.js";import{mat4 as y,vec2 as A,vec3 as _,vec4 as ae}from"https://wgpu-matrix.org/dist/2.x/wgpu-matrix.module.js";var ne=_.create(0,0,0),F=6,se={type:"displacement",refs:[{name:"color",type:"textureView",format:"bgra8unorm",access:"read"},{name:"map",type:"cobaltTexture",format:"bgra8unorm",access:"read"},{name:"out",type:"textureView",format:"bgra8unorm",access:"write"}],onInit:async function(t,e={}){return Je(t,e)},onRun:function(t,e,r){Ze(t,e,r)},onDestroy:function(t,e){et(e)},onResize:function(t,e){tt(t,e)},onViewportPosition:function(t,e){rt(t,e)},customFunctions:{addTriangle:function(t,e,r){let i=G(),a=e.data.spriteCount;e.data.spriteIndices.set(i,a);let o=a*F;return e.data.spriteData[o]=r[0][0],e.data.spriteData[o+1]=r[0][1],e.data.spriteData[o+2]=r[1][0],e.data.spriteData[o+3]=r[1][1],e.data.spriteData[o+4]=r[2][0],e.data.spriteData[o+5]=r[2][1],e.data.spriteCount++,i},removeTriangle:function(t,e,r){e.data.spriteIndices.delete(r),e.data.spriteCount--},setPosition:function(t,e,r,i){let o=e.data.spriteIndices.get(r)*F;e.data.spriteData[o]=i[0][0],e.data.spriteData[o+1]=i[0][1],e.data.spriteData[o+2]=i[1][0],e.data.spriteData[o+3]=i[1][1],e.data.spriteData[o+4]=i[2][0],e.data.spriteData[o+5]=i[2][1]}}};async function Je(t,e){let{device:r}=t,i=new Float32Array([e.options.offseyX??0,e.options.offseyY??0,e.options.scale??20,0]),a=r.createBuffer({label:"displacement options buffer",size:i.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(a.getMappedRange()).set(i),a.unmap();let o=256,n=o,u=Float32Array.BYTES_PER_ELEMENT*2,s=Float32Array.BYTES_PER_ELEMENT*2,x=Float32Array.BYTES_PER_ELEMENT*2,v=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),d=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),g=r.createPipelineLayout({bindGroupLayouts:[d]}),T="repeat",p="linear",E=r.createSampler({label:"displacement ampler",addressModeU:T,addressModeV:T,addressModeW:T,magFilter:p,minFilter:p,mipmapFilter:p}),P=r.createBindGroup({layout:d,entries:[{binding:0,resource:{buffer:v}},{binding:1,resource:e.refs.color.data.view},{binding:2,resource:E},{binding:3,resource:e.refs.map.view},{binding:4,resource:{buffer:a}}]}),M=r.createBuffer({size:o*F,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),D={arrayStride:8,stepMode:"vertex",attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},R=r.createRenderPipeline({label:"displacement",vertex:{module:r.createShaderModule({code:L}),entryPoint:"vs_main",buffers:[D]},fragment:{module:r.createShaderModule({code:L}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:g});return{bindGroup:P,bindGroupLayout:d,uniformBuffer:v,sampler:E,pipeline:R,params_buf:a,buffer:M,spriteData:new Float32Array(o*F),spriteCount:0,spriteIndices:new Map}}function Ze(t,e,r){if(e.data.spriteCount===0)return;let{device:i}=t,a=F*e.data.spriteCount*Float32Array.BYTES_PER_ELEMENT;i.queue.writeBuffer(e.data.buffer,0,e.data.spriteData.buffer,0,a);let o=r.beginRenderPass({colorAttachments:[{view:e.refs.out,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});o.setPipeline(e.data.pipeline),o.setBindGroup(0,e.data.bindGroup),o.setVertexBuffer(0,e.data.buffer);let n=e.data.spriteCount*3;o.draw(n,1,0,0),o.end()}function et(t){t.data.bindGroup=null,t.data.buffer.destroy(),t.data.buffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null,t.data.params_buf.destroy(),t.data.params_buf=null}function tt(t,e){let{device:r}=t;e.data.bindGroup=r.createBindGroup({layout:e.data.bindGroupLayout,entries:[{binding:0,resource:{buffer:e.data.uniformBuffer}},{binding:1,resource:e.refs.color.data.view},{binding:2,resource:e.data.sampler},{binding:3,resource:e.refs.map.view},{binding:4,resource:{buffer:e.data.params_buf}}]})}function rt(t,e){let{device:r}=t,i=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,o=y.ortho(0,i,a,0,-10,10);_.set(-h(t.viewport.position[0]),-h(t.viewport.position[1]),0,ne);let n=y.translation(ne);r.queue.writeBuffer(e.data.uniformBuffer,0,n.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,o.buffer)}function V(t,e){let r=e.vertices,i=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,a={size:r.byteLength,usage:i,mappedAtCreation:!0},o=t.createBuffer(a);return new Float32Array(o.getMappedRange()).set(r),o.unmap(),{buffer:o,bufferLayout:{arrayStride:20,stepMode:"vertex",attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x2",offset:12}]}}}var N="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->@location(0)vec4<f32>{var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);var output=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);return output;}";var br=ae.create(),ue=_.create(),le={type:"overlay",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"color",type:"textView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return ot(t,e)},onRun:function(t,e,r){at(t,e,r)},onDestroy:function(t,e){st(e)},onResize:function(t,e){ce(t,e)},onViewportPosition:function(t,e){ce(t,e)},customFunctions:{...U}};async function ot(t,e){let{device:r}=t,i=16192,a=i,n=Float32Array.BYTES_PER_ELEMENT*2,u=Float32Array.BYTES_PER_ELEMENT*2,s=Float32Array.BYTES_PER_ELEMENT*4,x=Float32Array.BYTES_PER_ELEMENT*4,v=r.createBuffer({size:(n+u+s+x)*a,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),d=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),g=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}}]}),T=r.createBindGroup({layout:g,entries:[{binding:0,resource:{buffer:d}},{binding:1,resource:e.refs.spritesheet.data.colorTexture.view},{binding:2,resource:e.refs.spritesheet.data.colorTexture.sampler},{binding:3,resource:{buffer:v}}]}),p=r.createPipelineLayout({bindGroupLayouts:[g]}),E=r.createRenderPipeline({label:"overlay",vertex:{module:r.createShaderModule({code:N}),entryPoint:"vs_main",buffers:[e.refs.spritesheet.data.quads.bufferLayout]},fragment:{module:r.createShaderModule({code:N}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:p});return{instancedDrawCalls:new Uint32Array(i*2),instancedDrawCallCount:0,spriteBuffer:v,uniformBuffer:d,pipeline:E,bindGroupLayout:g,bindGroup:T,spriteData:new Float32Array(i*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function at(t,e,r){let{device:i}=t,a=e.options.loadOp||"load";e.data.dirty&&(nt(e.data),e.data.dirty=!1),i.queue.writeBuffer(e.data.spriteBuffer,0,e.data.spriteData.buffer);let o=r.beginRenderPass({colorAttachments:[{view:e.refs.color,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});o.setPipeline(e.data.pipeline),o.setBindGroup(0,e.data.bindGroup),o.setVertexBuffer(0,e.refs.spritesheet.data.quads.buffer);let n=6,f=0;for(let u=0;u<e.data.instancedDrawCallCount;u++){let c=e.data.instancedDrawCalls[u*2]*n,s=e.data.instancedDrawCalls[u*2+1];o.draw(n,s,c,f),f+=s}o.end()}function nt(t){let e=-1,r=0;t.instancedDrawCallCount=0;for(let i=0;i<t.spriteCount;i++){let a=t.spriteData[i*12+11]&65535;a!==e&&(r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++),e=a,r=0),r++}r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++)}function ce(t,e){let i=Math.round(t.viewport.width/1),a=Math.round(t.viewport.height/1),o=y.ortho(0,i,a,0,-10,10);_.set(0,0,0,ue);let n=y.translation(ue);t.device.queue.writeBuffer(e.data.uniformBuffer,0,n.buffer),t.device.queue.writeBuffer(e.data.uniformBuffer,64,o.buffer)}function st(t){t.data.instancedDrawCalls=null,t.data.bindGroup=null,t.data.spriteBuffer.destroy(),t.data.spriteBuffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null}var Y="@binding(0)@group(0)var tileTexture:texture_2d<f32>;@binding(1)@group(0)var tileSampler:sampler;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};const pos=array(vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0),);const uv=array(vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,0.0),);@vertex fn vs_main(@builtin(vertex_index)VertexIndex:u32)->Fragment{var output:Fragment;output.Position=vec4(pos[VertexIndex],0.0,1.0);output.TexCoord=uv[VertexIndex];return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{var col=textureSample(tileTexture,tileSampler,TexCoord);return vec4<f32>(col.rgb,1.0);}";var pe={type:"fbBlit",refs:[{name:"in",type:"cobaltTexture",format:"bgra8unorm",access:"read"},{name:"out",type:"cobaltTexture",format:"bgra8unorm",access:"write"}],onInit:async function(t,e={}){return ct(t,e)},onRun:function(t,e,r){ft(t,e,r)},onDestroy:function(t,e){},onResize:function(t,e){lt(t,e)},onViewportPosition:function(t,e){}};async function ct(t,e){let{device:r}=t,i=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),a=r.createBindGroup({layout:i,entries:[{binding:0,resource:e.refs.in.data.view},{binding:1,resource:e.refs.in.data.sampler}]}),o=r.createPipelineLayout({bindGroupLayouts:[i]}),n=r.createRenderPipeline({label:"fb-blit",vertex:{module:r.createShaderModule({code:Y}),entryPoint:"vs_main",buffers:[]},fragment:{module:r.createShaderModule({code:Y}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:o});return{bindGroupLayout:i,bindGroup:a,pipeline:n}}function ft(t,e,r){let{device:i}=t,a=r.beginRenderPass({colorAttachments:[{view:e.refs.out,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});a.setPipeline(e.data.pipeline),a.setBindGroup(0,e.data.bindGroup),a.draw(6,1,0,0),a.end()}function lt(t,e){let{device:r}=t;e.data.bindGroup=r.createBindGroup({layout:e.data.bindGroupLayout,entries:[{binding:0,resource:e.refs.in.data.view},{binding:1,resource:e.refs.in.data.sampler}]})}var de="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};@binding(0)@group(0)var<uniform> transformUBO:TransformData;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)Color:vec4<f32>,};@vertex fn vs_main(@location(0)vertexPosition:vec2<f32>,@location(1)vertexColor:vec4<f32>)->Fragment{var sx:f32=1.0;var sy:f32=1.0;var sz:f32=1.0;var rot:f32=0.0;var tx:f32=1.0;var ty:f32=1.0;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;var output:Fragment;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,0.0,1.0);output.Color=vertexColor;return output;}@fragment fn fs_main(@location(0)Color:vec4<f32>)->@location(0)vec4<f32>{return Color;}";var me=_.create(0,0,0);function dt(t){return[-t[1],t[0]]}var xe={type:"primitives",refs:[{name:"color",type:"textView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return mt(t,e)},onRun:function(t,e,r){vt(t,e,r)},onDestroy:function(t,e){xt(e)},onResize:function(t,e){ve(t,e)},onViewportPosition:function(t,e){ve(t,e)},customFunctions:{line:function(t,e,r,i,a,o=1){let n=A.sub(i,r),f=A.normalize(n),u=dt(f),c=o/2,s=e.data.vertexCount*6;e.data.vertices[s+0]=r[0]+u[0]*c,e.data.vertices[s+1]=r[1]+u[1]*c,e.data.vertices[s+2]=a[0],e.data.vertices[s+3]=a[1],e.data.vertices[s+4]=a[2],e.data.vertices[s+5]=a[3],e.data.vertices[s+6]=r[0]-u[0]*c,e.data.vertices[s+7]=r[1]-u[1]*c,e.data.vertices[s+8]=a[0],e.data.vertices[s+9]=a[1],e.data.vertices[s+10]=a[2],e.data.vertices[s+11]=a[3],e.data.vertices[s+12]=i[0]+u[0]*c,e.data.vertices[s+13]=i[1]+u[1]*c,e.data.vertices[s+14]=a[0],e.data.vertices[s+15]=a[1],e.data.vertices[s+16]=a[2],e.data.vertices[s+17]=a[3],e.data.vertices[s+18]=r[0]-u[0]*c,e.data.vertices[s+19]=r[1]-u[1]*c,e.data.vertices[s+20]=a[0],e.data.vertices[s+21]=a[1],e.data.vertices[s+22]=a[2],e.data.vertices[s+23]=a[3],e.data.vertices[s+24]=i[0]+u[0]*c,e.data.vertices[s+25]=i[1]+u[1]*c,e.data.vertices[s+26]=a[0],e.data.vertices[s+27]=a[1],e.data.vertices[s+28]=a[2],e.data.vertices[s+29]=a[3],e.data.vertices[s+30]=i[0]-u[0]*c,e.data.vertices[s+31]=i[1]-u[1]*c,e.data.vertices[s+32]=a[0],e.data.vertices[s+33]=a[1],e.data.vertices[s+34]=a[2],e.data.vertices[s+35]=a[3],e.data.vertexCount+=6,t.device.queue.writeBuffer(e.data.vertexBuffer,0,e.data.vertices.buffer)},filledEllipse:function(t,e,r,i,a,o,n){let[f,u]=r,c=2*Math.PI/o;for(let s=0;s<o;s++){let l=s*c,x=(s+1)*c,v=f+i*Math.cos(l),d=u+a*Math.sin(l),g=f+i*Math.cos(x),T=u+a*Math.sin(x),p=e.data.vertexCount*6+s*18;e.data.vertices[p+0]=f,e.data.vertices[p+1]=u,e.data.vertices[p+2]=n[0],e.data.vertices[p+3]=n[1],e.data.vertices[p+4]=n[2],e.data.vertices[p+5]=n[3],e.data.vertices[p+6]=v,e.data.vertices[p+7]=d,e.data.vertices[p+8]=n[0],e.data.vertices[p+9]=n[1],e.data.vertices[p+10]=n[2],e.data.vertices[p+11]=n[3],e.data.vertices[p+12]=g,e.data.vertices[p+13]=T,e.data.vertices[p+14]=n[0],e.data.vertices[p+15]=n[1],e.data.vertices[p+16]=n[2],e.data.vertices[p+17]=n[3]}e.data.vertexCount+=3*o,t.device.queue.writeBuffer(e.data.vertexBuffer,0,e.data.vertices.buffer)},filledBox:function(t,e,r,i,a,o){let[n,f]=r,u=e.data.vertexCount*6;e.data.vertexCount+=6,t.device.queue.writeBuffer(e.data.vertexBuffer,0,e.data.vertices.buffer)},clear:function(t,e){e.data.vertexCount=0}}};async function mt(t,e){let{device:r}=t,i=new Float32Array(1e4),a=r.createBuffer({size:i.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),o=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),n=r.createShaderModule({code:de}),f=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}}]}),u=r.createPipelineLayout({bindGroupLayouts:[f]}),c=r.createBindGroup({layout:f,entries:[{binding:0,resource:{buffer:o}}]}),s=r.createRenderPipeline({layout:u,vertex:{module:n,entryPoint:"vs_main",buffers:[{arrayStride:6*Float32Array.BYTES_PER_ELEMENT,attributes:[{shaderLocation:0,offset:0,format:"float32x2"},{shaderLocation:1,format:"float32x4",offset:8}]}]},fragment:{module:n,entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"}});return{uniformBuffer:o,vertexBuffer:a,pipeline:s,bindGroup:c,vertexCount:0,vertices:i}}function vt(t,e,r){if(e.data.vertexCount===0)return;let{device:i}=t,a=e.options.loadOp||"load",o=r.beginRenderPass({colorAttachments:[{view:e.refs.color,clearValue:t.clearValue,loadOp:a,storeOp:"store"}]});o.setPipeline(e.data.pipeline),o.setBindGroup(0,e.data.bindGroup),o.setVertexBuffer(0,e.data.vertexBuffer),o.draw(e.data.vertexCount),o.end()}function xt(t){t.data.vertexBuffer.destroy(),t.data.vertexBuffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null}function ve(t,e){let{device:r}=t,i=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,o=y.ortho(0,i,a,0,-10,10);_.set(-h(t.viewport.position[0]),-h(t.viewport.position[1]),0,me);let n=y.translation(me);r.queue.writeBuffer(e.data.uniformBuffer,0,n.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,o.buffer)}function q(t){let e=new Float32Array([-1,-1,0,1,1,-1,1,1,1,1,1,0,-1,-1,0,1,1,1,1,0,-1,1,0,0]),r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,i={size:e.byteLength,usage:r,mappedAtCreation:!0},a=t.createBuffer(i);return new Float32Array(a.getMappedRange()).set(e),a.unmap(),{buffer:a,bufferLayout:{arrayStride:16,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x2",offset:8}]}}}var X="struct TransformData{viewOffset:vec2<f32>,viewportSize:vec2<f32>,inverseAtlasTextureSize:vec2<f32>,tileSize:f32,inverseTileSize:f32,};struct TileScroll{scrollScale:vec2<f32>};@binding(0)@group(0)var<uniform> myScroll:TileScroll;@binding(1)@group(0)var tileTexture:texture_2d<f32>;@binding(2)@group(0)var tileSampler:sampler;@binding(0)@group(1)var<uniform> transformUBO:TransformData;@binding(1)@group(1)var atlasTexture:texture_2d<f32>;@binding(2)@group(1)var atlasSampler:sampler;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec2<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;let inverseTileTextureSize=1/vec2<f32>(textureDimensions(tileTexture,0));var scrollScale=myScroll.scrollScale;var viewOffset:vec2<f32>=transformUBO.viewOffset*scrollScale;let PixelCoord=(vertexTexCoord*transformUBO.viewportSize)+viewOffset;output.TexCoord=PixelCoord/transformUBO.tileSize;output.Position=vec4<f32>(vertexPosition,0.0,1.0);return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{var tilemapCoord=floor(TexCoord);var u_tilemapSize=vec2<f32>(textureDimensions(tileTexture,0));var tileFoo=fract((tilemapCoord+vec2<f32>(0.5,0.5))/u_tilemapSize);var tile=floor(textureSample(tileTexture,tileSampler,tileFoo)*255.0);if(tile.x==255&&tile.y==255){discard;}var u_tilesetSize=vec2<f32>(textureDimensions(atlasTexture,0))/transformUBO.tileSize;let u_tileUVMinBounds=vec2<f32>(0.5/transformUBO.tileSize,0.5/transformUBO.tileSize);let u_tileUVMaxBounds=vec2<f32>((transformUBO.tileSize-0.5)/transformUBO.tileSize,(transformUBO.tileSize-0.5)/transformUBO.tileSize);var texcoord=clamp(fract(TexCoord),u_tileUVMinBounds,u_tileUVMaxBounds);var tileCoord=(tile.xy+texcoord)/u_tilesetSize;var color=textureSample(atlasTexture,atlasSampler,tileCoord);if(color.a<=0.1){discard;}return color;}";var C=new Float32Array(8),be={type:"tileAtlas",refs:[],onInit:async function(t,e={}){return bt(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){yt(data)},onResize:function(t,e){ge(t,e)},onViewportPosition:function(t,e){ge(t,e)}};async function bt(t,e){let{device:r}=t,i=q(r),a=await S(t,"tile atlas",e.options.textureUrl),o=r.createBuffer({size:32,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),n=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),f=r.createBindGroup({layout:n,entries:[{binding:0,resource:{buffer:o}},{binding:1,resource:a.view},{binding:2,resource:a.sampler}]}),u=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),c=r.createPipelineLayout({bindGroupLayouts:[u,n]});return{pipeline:r.createRenderPipeline({label:"tile",vertex:{module:r.createShaderModule({code:X}),entryPoint:"vs_main",buffers:[i.bufferLayout]},fragment:{module:r.createShaderModule({code:X}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:c}),uniformBuffer:o,atlasBindGroup:f,atlasMaterial:a,tileBindGroupLayout:u,quad:i,tileSize:e.options.tileSize,tileScale:e.options.tileScale}}function yt(t){t.atlasMaterial.texture.destroy(),t.atlasMaterial.texture=void 0}function ge(t,e){C[0]=t.viewport.position[0],C[1]=t.viewport.position[1];let r=e.data,{tileScale:i,tileSize:a}=r,o=t.viewport.width/t.viewport.zoom,n=t.viewport.height/t.viewport.zoom;C[2]=o/i,C[3]=n/i,C[4]=1/r.atlasMaterial.texture.width,C[5]=1/r.atlasMaterial.texture.height,C[6]=a,C[7]=1/a,t.device.queue.writeBuffer(r.uniformBuffer,0,C,0,8)}function W(t){let r=Object.keys(t.frames).length,i=new Float32Array(r*30),a=[],o={},n=0;for(let f in t.frames){let u=t.frames[f];a.push(f),o[f]=u.sourceSize;let c=-.5+u.spriteSourceSize.x/u.sourceSize.w,s=-.5+u.spriteSourceSize.y/u.sourceSize.h,l=-.5+(u.spriteSourceSize.x+u.spriteSourceSize.w)/u.sourceSize.w,x=-.5+(u.spriteSourceSize.y+u.spriteSourceSize.h)/u.sourceSize.h,v=[c,s,0],d=[c,x,0],g=[l,x,0],T=[l,s,0],p=0+u.frame.x/t.meta.size.w,E=0+u.frame.y/t.meta.size.h,P=0+(u.frame.x+u.frame.w)/t.meta.size.w,M=0+(u.frame.y+u.frame.h)/t.meta.size.h,D=[p,E],R=[p,M],j=[P,M],he=[P,E];i.set(v,n),i.set(D,n+3),i.set(d,n+5),i.set(R,n+8),i.set(g,n+10),i.set(j,n+13),i.set(v,n+15),i.set(D,n+18),i.set(g,n+20),i.set(j,n+23),i.set(T,n+25),i.set(he,n+28),n+=30}return{spriteMeta:o,locations:a,vertices:i}}var H="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,emissiveIntensity:f32,sortValue:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;@binding(4)@group(0)var emissiveTexture:texture_2d<f32>;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};struct GBufferOutput{@location(0)color:vec4<f32>,@location(1)emissive:vec4<f32>,}@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->GBufferOutput{var output:GBufferOutput;var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);output.color=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);let emissive=textureSample(emissiveTexture,mySampler,TexCoord);output.emissive=vec4(emissive.rgb,1.0)*emissive.a;return output;}";var ye=_.create(0,0,0),we={type:"spritesheet",refs:[],onInit:async function(t,e={}){return wt(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){St(e)},onResize:function(t,e){_e(t,e)},onViewportPosition:function(t,e){_e(t,e)}};async function wt(t,e){let{canvas:r,device:i}=t,a=await Tt(e.options.spriteSheetJsonUrl);a=W(a);let o=V(i,a),[n,f]=await Promise.all([S(t,"sprite",e.options.colorTextureUrl,"rgba8unorm"),S(t,"emissive sprite",e.options.emissiveTextureUrl,"rgba8unorm")]);r.style.imageRendering="pixelated";let u=i.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),c=i.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}}]}),s=i.createPipelineLayout({bindGroupLayouts:[c]});return{pipeline:i.createRenderPipeline({label:"sprite",vertex:{module:i.createShaderModule({code:H}),entryPoint:"vs_main",buffers:[o.bufferLayout]},fragment:{module:i.createShaderModule({code:H}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}},{format:"rgba16float"}]},primitive:{topology:"triangle-list"},layout:s}),uniformBuffer:u,quads:o,colorTexture:n,emissiveTexture:f,bindGroupLayout:c,spritesheet:a}}function St(t){t.data.quads.buffer.destroy(),t.data.colorTexture.buffer.destroy(),t.data.uniformBuffer.destroy(),t.data.emissiveTexture.texture.destroy()}async function Tt(t){return(await fetch(t)).json()}function _e(t,e){let{device:r}=t,i=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,o=y.ortho(0,i,a,0,-10,10);_.set(-h(t.viewport.position[0]),-h(t.viewport.position[1]),0,ye);let n=y.translation(ye);r.queue.writeBuffer(e.data.uniformBuffer,0,n.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,o.buffer)}var Se={type:"fbTexture",refs:[],onInit:async function(t,e={}){return ht(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){Te(data)},onResize:function(t,e){Ct(t,e)},onViewportPosition:function(t,e){}};async function ht(t,e){let{device:r}=t,{label:i,mip_count:a,format:o,usage:n,viewportScale:f}=e.options;return b(r,i,t.viewport.width*f,t.viewport.height*f,a,o,n)}function Te(t){t.data.texture.destroy()}function Ct(t,e){let{device:r}=t;Te(e);let{width:i,height:a}=t.viewport,{options:o}=e,n=e.options.viewportScale;e.data=b(r,o.label,i*n,a*n,o.mip_count,o.format,o.usage)}async function ii(t,e,r){let a=await(await navigator.gpu?.requestAdapter({powerPreference:"high-performance"}))?.requestDevice(),o=t.getContext("webgpu"),n=navigator.gpu.getPreferredCanvasFormat();return o.configure({device:a,format:n,alphaMode:"opaque"}),{nodeDefs:{tileAtlas:be,spritesheet:we,fbTexture:Se,bloom:$,composite:ee,sprite:re,tile:oe,displacement:se,overlay:le,fbBlit:pe,primitives:xe},nodes:[],defaultTextureViewRefs:[],canvas:t,device:a,context:o,clearValue:{r:0,g:0,b:0,a:1},viewport:{width:e,height:r,zoom:1,position:[0,0]}}}function oi(t,e){if(!e?.type)throw new Error("Can't define a new node missing a type.");t.nodeDefs[e.type]=e}async function ai(t,e){let r=t.nodeDefs[e?.type];if(!r)throw new Error("Can't initialize a new node missing a type.");let i={type:e.type,refs:e.refs||{},options:e.options||{},data:{},enabled:!0};for(let o in i.refs)i.refs[o]==="FRAME_TEXTURE_VIEW"&&(t.defaultTextureViewRefs.push({node:i,refName:o}),i.refs[o]=t.context.getCurrentTexture().createView());i.data=await r.onInit(t,i);let a=r.customFunctions||{};for(let o in a)i[o]=function(...n){return a[o](t,i,...n)};return t.nodes.push(i),i}function ni(t){let{device:e,context:r}=t,i=e.createCommandEncoder(),a=t.context.getCurrentTexture().createView();for(let o of t.defaultTextureViewRefs)o.node.refs[o.refName]=a;for(let o of t.nodes){if(!o.enabled)continue;t.nodeDefs[o.type].onRun(t,o,i)}e.queue.submit([i.finish()])}function si(t){for(let e of t.nodes)t.nodeDefs[e.type].onDestroy(t,e);t.nodes.length=0,t.defaultTextureViewRefs.length=0}function ui(t,e,r){t.viewport.width=e,t.viewport.height=r;for(let i of t.nodes)t.nodeDefs[i.type].onResize(t,i)}function ci(t,e){t.viewport.position[0]=e[0]-t.viewport.width/2/t.viewport.zoom,t.viewport.position[1]=e[1]-t.viewport.height/2/t.viewport.zoom;for(let r of t.nodes)t.nodeDefs[r.type].onViewportPosition(t,r)}export{b as createTexture,S as createTextureFromUrl,oi as defineNode,ni as draw,ii as init,ai as initNode,si as reset,ui as setViewportDimensions,ci as setViewportPosition};

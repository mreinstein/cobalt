var fe=Object.defineProperty;var de=(e,t)=>{for(var r in t)fe(e,r,{get:t[r],enumerable:!0})};function v(e,t,r,o,i,n,a){let s=e.createTexture({label:t,size:{width:r,height:o},format:n,usage:a,mipLevelCount:i,sampleCount:1,dimension:"2d"}),u=s.createView(),c=[];for(let p=0;p<i;p++)c.push(s.createView({label:t,format:n,dimension:"2d",aspect:"all",baseMipLevel:p,mipLevelCount:1,baseArrayLayer:0,arrayLayerCount:1}));let l=e.createSampler({label:`${t} sampler`,addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"});return{size:{width:r,height:o},texture:s,view:u,mip_view:c,sampler:l}}var q="const BLOOM_MIP_COUNT:i32=7;const MODE_PREFILTER:u32=0u;const MODE_DOWNSAMPLE:u32=1u;const MODE_UPSAMPLE_FIRST:u32=2u;const MODE_UPSAMPLE:u32=3u;const EPSILON:f32=1.0e-4;struct bloom_param{parameters:vec4<f32>,combine_constant:f32,doop:u32,ferp:u32,}struct mode_lod_param{mode_lod:u32,}@group(0)@binding(0)var output_texture:texture_storage_2d<rgba16float,write>;@group(0)@binding(1)var input_texture:texture_2d<f32>;@group(0)@binding(2)var bloom_texture:texture_2d<f32>;@group(0)@binding(3)var samp:sampler;@group(0)@binding(4)var<uniform> param:bloom_param;@group(0)@binding(5)var<uniform> pc:mode_lod_param;fn QuadraticThreshold(color:vec4<f32>,threshold:f32,curve:vec3<f32>)->vec4<f32>{let brightness=max(max(color.r,color.g),color.b);var rq:f32=clamp(brightness-curve.x,0.0,curve.y);rq=curve.z*(rq*rq);let ret_color=color*max(rq,brightness-threshold)/max(brightness,EPSILON);return ret_color;}fn Prefilter(color:vec4<f32>,uv:vec2<f32>)->vec4<f32>{let clamp_value=20.0;var c=min(vec4<f32>(clamp_value),color);c=QuadraticThreshold(color,param.parameters.x,param.parameters.yzw);return c;}fn DownsampleBox13(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,tex_size:vec2<f32>)->vec3<f32>{let A=textureSampleLevel(tex,samp,uv,lod).rgb;let texel_size=tex_size*0.5;let B=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,-1.0),lod).rgb;let C=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,1.0),lod).rgb;let D=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,1.0),lod).rgb;let E=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,-1.0),lod).rgb;let F=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let G=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,0.0),lod).rgb;let H=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,2.0),lod).rgb;let I=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let J=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let K=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,0.0),lod).rgb;let L=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let M=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,-2.0),lod).rgb;var result:vec3<f32>=vec3<f32>(0.0);result=result+(B+C+D+E)*0.5;result=result+(F+G+A+M)*0.125;result=result+(G+H+I+A)*0.125;result=result+(A+I+J+K)*0.125;result=result+(M+A+K+L)*0.125;result=result*0.25;return result;}fn UpsampleTent9(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,texel_size:vec2<f32>,radius:f32)->vec3<f32>{let offset=texel_size.xyxy*vec4<f32>(1.0,1.0,-1.0,0.0)*radius;var result:vec3<f32>=textureSampleLevel(tex,samp,uv,lod).rgb*4.0;result=result+textureSampleLevel(tex,samp,uv-offset.xy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv-offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv-offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.zw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xy,lod).rgb;return result*(1.0/16.0);}fn combine(ex_color:vec3<f32>,color_to_add:vec3<f32>,combine_constant:f32)->vec3<f32>{let existing_color=ex_color+(-color_to_add);let blended_color=(combine_constant*existing_color)+color_to_add;return blended_color;}@compute @workgroup_size(8,4,1)fn cs_main(@builtin(global_invocation_id)global_invocation_id:vec3<u32>){let mode=pc.mode_lod>>16u;let lod=pc.mode_lod&65535u;let imgSize=textureDimensions(output_texture);if(global_invocation_id.x<=u32(imgSize.x)&&global_invocation_id.y<=u32(imgSize.y)){var texCoords:vec2<f32>=vec2<f32>(f32(global_invocation_id.x)/f32(imgSize.x),f32(global_invocation_id.y)/f32(imgSize.y));texCoords=texCoords+(1.0/vec2<f32>(imgSize))*0.5;let texSize=vec2<f32>(textureDimensions(input_texture,i32(lod)));var color:vec4<f32>=vec4<f32>(1.0);if(mode==MODE_PREFILTER){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);color=Prefilter(color,texCoords);}else if(mode==MODE_DOWNSAMPLE){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);}else if(mode==MODE_UPSAMPLE_FIRST){let bloomTexSize=textureDimensions(input_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(input_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}else if(mode==MODE_UPSAMPLE){let bloomTexSize=textureDimensions(bloom_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(bloom_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}textureStore(output_texture,vec2<i32>(global_invocation_id.xy),color);}}";var x=7,ve=0,Y=1,xe=2,W=3,X={type:"bloom",refs:[{name:"emissive",type:"webGpuTextureView",format:"rgba16",access:"read"},{name:"hdr",type:"webGpuTextureView",format:"rgba16",access:"read"},{name:"bloom",type:"webGpuTextureView",format:"rgba16",access:"readwrite"}],onInit:async function(e,t={}){return ge(e,t)},onRun:function(e,t,r){_e(e,t.data,r)},onDestroy:function(e,t){j(t)},onResize:function(e,t){be(e,t)},onViewportPosition:function(e,t){}};function ge(e,t){let{device:r}=e,o=e.viewport.width,i=e.viewport.height,n={compute_pipeline:null,bind_group:[],bind_group_layout:[],bind_groups_textures:[]},a=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:"write-only",format:"rgba16float",viewDimension:"2d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:2,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:3,visibility:GPUShaderStage.COMPUTE,sampler:{}},{binding:4,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:5,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}]});n.bind_group_layout.push(a),n.bind_groups_textures.push(v(r,"bloom downsampler image 0",o/2,i/2,x,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),n.bind_groups_textures.push(v(r,"bloom downsampler image 1",o/2,i/2,x,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),n.bind_groups_textures.push(e.resources.bloom.data.value);let s=r.createPipelineLayout({bindGroupLayouts:n.bind_group_layout}),u=r.createComputePipeline({layout:s,compute:{module:r.createShaderModule({code:q}),entryPoint:"cs_main"}});return H(e,n),n.compute_pipeline=u,n}function H(e,t){let{device:r}=e,o=.1,i=.2,n=.68,a=new Float32Array([o,o-i,i*2,.25/i,n,0,0,0]),s=r.createBuffer({label:"bloom static parameters buffer",size:a.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(s.getMappedRange()).set(a),s.unmap(),t.bind_group.length=0,t.params_buf=s,t.bind_group.push(w(r,t,t.bind_groups_textures[0].mip_view[0],e.resources.emissive.data.value.view,e.resources.hdr.data.value.view,e.resources.hdr.data.value.sampler,s,ve<<16|0));for(let c=1;c<x;c++)t.bind_group.push(w(r,t,t.bind_groups_textures[1].mip_view[c],t.bind_groups_textures[0].view,e.resources.hdr.data.value.view,e.resources.hdr.data.value.sampler,s,Y<<16|c-1)),t.bind_group.push(w(r,t,t.bind_groups_textures[0].mip_view[c],t.bind_groups_textures[1].view,e.resources.hdr.data.value.view,e.resources.hdr.data.value.sampler,s,Y<<16|c));t.bind_group.push(w(r,t,t.bind_groups_textures[2].mip_view[x-1],t.bind_groups_textures[0].view,e.resources.hdr.data.value.view,e.resources.hdr.data.value.sampler,s,xe<<16|x-2));let u=!0;for(let c=x-2;c>=0;c--)u?(t.bind_group.push(w(r,t,t.bind_groups_textures[1].mip_view[c],t.bind_groups_textures[0].view,t.bind_groups_textures[2].view,e.resources.hdr.data.value.sampler,s,W<<16|c)),u=!1):(t.bind_group.push(w(r,t,t.bind_groups_textures[2].mip_view[c],t.bind_groups_textures[0].view,t.bind_groups_textures[1].view,e.resources.hdr.data.value.sampler,s,W<<16|c)),u=!0)}function w(e,t,r,o,i,n,a,s){let u=new Uint32Array([s]),c=e.createBuffer({label:"bloom static mode_lod buffer",size:u.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});return new Uint32Array(c.getMappedRange()).set(u),c.unmap(),e.createBindGroup({label:"bloom bind group layout",layout:t.bind_group_layout[0],entries:[{binding:0,resource:r},{binding:1,resource:o},{binding:2,resource:i},{binding:3,resource:n},{binding:4,resource:{buffer:a}},{binding:5,resource:{buffer:c}}]})}function _e(e,t,r){let s=0,u=r.beginComputePass({label:"bloom Compute Pass"});u.setPipeline(t.compute_pipeline),u.setBindGroup(0,t.bind_group[s]),s+=1;let c=G(0,t.bind_groups_textures[0]);u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let l=1;l<x;l++)c=G(l,t.bind_groups_textures[0]),u.setBindGroup(0,t.bind_group[s]),s+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1),u.setBindGroup(0,t.bind_group[s]),s+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);u.setBindGroup(0,t.bind_group[s]),s+=1,c=G(x-1,t.bind_groups_textures[2]),u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let l=x-2;l>=0;l--)c=G(l,t.bind_groups_textures[2]),u.setBindGroup(0,t.bind_group[s]),s+=1,u.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);u.end()}function G(e,t){let r=t.size.width,o=t.size.height;for(let i=0;i<e;i++)r/=2,o/=2;return{width:r,height:o,depthOrArrayLayers:1}}function be(e,t){let{device:r}=e,o=t.data;j(o),o.bind_groups_textures.push(v(r,"bloom downsampler image 0",e.viewport.width/2,e.viewport.height/2,x,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(v(r,"bloom downsampler image 1",e.viewport.width/2,e.viewport.height/2,x,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(e.resources.bloom.data.value),H(e,o)}function j(e){for(let t of e.bind_groups_textures)t.texture.destroy();e.bind_groups_textures.length=0}var B="struct BloomComposite{bloom_intensity:f32,bloom_combine_constant:f32,}@group(0)@binding(0)var mySampler:sampler;@group(0)@binding(1)var colorTexture:texture_2d<f32>;@group(0)@binding(2)var emissiveTexture:texture_2d<f32>;@group(0)@binding(3)var<uniform> composite_parameter:BloomComposite;struct VertexOutput{@builtin(position)Position:vec4<f32>,@location(0)fragUV:vec2<f32>,}@vertex fn vert_main(@builtin(vertex_index)VertexIndex:u32)->VertexOutput{const pos=array(vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0),);const uv=array(vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,0.0),);var output:VertexOutput;output.Position=vec4(pos[VertexIndex],0.0,1.0);output.fragUV=uv[VertexIndex];return output;}fn GTTonemap_point(x:f32)->f32{let m:f32=0.22;let a:f32=1.0;let c:f32=1.33;let P:f32=1.0;let l:f32=0.4;let l0:f32=((P-m)*l)/a;let S0:f32=m+l0;let S1:f32=m+a*l0;let C2:f32=(a*P)/(P-S1);let L:f32=m+a*(x-m);let T:f32=m*pow(x/m,c);let S:f32=P-(P-S1)*exp(-C2*(x-S0)/P);let w0:f32=1.0-smoothstep(0.0,m,x);var w2:f32=1.0;if(x<m+l){w2=0.0;}let w1:f32=1.0-w0-w2;return f32(T*w0+L*w1+S*w2);}fn GTTonemap(x:vec3<f32>)->vec3<f32>{return vec3<f32>(GTTonemap_point(x.r),GTTonemap_point(x.g),GTTonemap_point(x.b));}fn aces(x:vec3<f32>)->vec3<f32>{let a:f32=2.51;let b:f32=0.03;let c:f32=2.43;let d:f32=0.59;let e:f32=0.14;return clamp((x*(a*x+b))/(x*(c*x+d)+e),vec3<f32>(0.0),vec3<f32>(1.0));}@fragment fn frag_main(@location(0)fragUV:vec2<f32>)->@location(0)vec4<f32>{let hdr_color=textureSample(colorTexture,mySampler,fragUV);let bloom_color=textureSample(emissiveTexture,mySampler,fragUV);let combined_color=((bloom_color*composite_parameter.bloom_intensity)*composite_parameter.bloom_combine_constant);let mapped_color=GTTonemap(combined_color.rgb);let gamma_corrected_color=pow(mapped_color,vec3<f32>(1.0/2.2));return vec4<f32>(gamma_corrected_color+hdr_color.rgb,1.0);}";var k={type:"bloom",refs:[{name:"hdr",type:"webGpuTextureView",format:"rgba16",access:"read"},{name:"bloom",type:"webGpuTextureView",format:"rgba16",access:"read"},{name:"combined",type:"webGpuTextureFrameView",format:"rgba8unorm",access:"write"}],onInit:async function(e,t={}){return we(e,t)},onRun:function(e,t,r){Se(e,t,r)},onDestroy:function(e,t){},onResize:function(e,t){Te(e,t)},onViewportPosition:function(e,t){}};function we(e,t){let{device:r}=e,o=navigator.gpu.getPreferredCanvasFormat(),i=40,n=.68,a=new Float32Array([i,n]),s=r.createBuffer({label:"scene composite params buffer",size:a.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(s.getMappedRange()).set(a),s.unmap();let u=r.createRenderPipeline({layout:"auto",vertex:{module:r.createShaderModule({code:B}),entryPoint:"vert_main"},fragment:{module:r.createShaderModule({code:B}),entryPoint:"frag_main",targets:[{format:o}]},primitive:{topology:"triangle-list"}});return{bindGroup:r.createBindGroup({layout:u.getBindGroupLayout(0),entries:[{binding:0,resource:e.resources.hdr.data.value.sampler},{binding:1,resource:e.resources.hdr.data.value.view},{binding:2,resource:e.resources.bloom.data.value.mip_view[0]},{binding:3,resource:{buffer:s}}]}),pipeline:u,params_buf:s}}function Se(e,t,r){let o=r.beginRenderPass({colorAttachments:[{view:t.refs.combined,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]}),{pipeline:i,bindGroup:n}=t.data;o.setPipeline(i),o.setBindGroup(0,n),o.draw(6,1,0,0),o.end()}function Te(e,t){let{bindGroup:r,pipeline:o,params_buf:i}=t.data,{device:n}=e;t.data.bindGroup=n.createBindGroup({layout:o.getBindGroupLayout(0),entries:[{binding:0,resource:e.resources.hdr.data.value.sampler},{binding:1,resource:e.resources.hdr.data.value.view},{binding:2,resource:e.resources.bloom.data.value.mip_view[0]},{binding:3,resource:{buffer:i}}]})}var h={};de(h,{addSprite:()=>he,removeSprite:()=>Ee,setSprite:()=>ze,setSpriteName:()=>Ce,setSpriteOpacity:()=>Be,setSpritePosition:()=>Ge,setSpriteRotation:()=>Fe,setSpriteTint:()=>Ue});function F(e,t,r){if(r.spriteCount===0)return 0;let o=0,i=r.spriteCount-1,n=e<<16&16711680|t&65535;for(;o<=i;){let a=r.spriteData[o*12+11];if(n<=a)return o;let s=r.spriteData[i*12+11];if(n>=s)return i+1;let u=Math.floor((o+i)/2),c=r.spriteData[u*12+11];if(n===c)return u+1;n>c?o=u+1:i=u-1}return o}function z(){return Math.ceil(Math.random()*(Number.MAX_SAFE_INTEGER-10))}function he(e,t,r,o,i,n,a,s,u){let c=e.resources.spritesheet.data.spritesheet;t=t.data;let l=c.locations.indexOf(r),p=F(u,l,t),m=(p+1)*12;t.spriteData.set(t.spriteData.subarray(p*12,t.spriteCount*12),m),Q(t,c,p,r,o,i,n,a,s,u);for(let[g,_]of t.spriteIndices)_>=p&&t.spriteIndices.set(g,_+1);let d=z();return t.spriteIndices.set(d,p),t.spriteCount++,t.dirty=!0,d}function Ee(e,t,r){t=t.data;let o=t.spriteIndices.get(r);for(let[n,a]of t.spriteIndices)a>o&&t.spriteIndices.set(n,a-1);let i=o*12;t.spriteData.set(t.spriteData.subarray((o+1)*12,t.spriteCount*12),i),t.spriteIndices.delete(r),t.spriteCount--,t.dirty=!0}function Ce(e,t,r,o,i){let n=e.resources.spritesheet.data.spritesheet;t=t.data;let a=n.locations.indexOf(o),s=n.spriteMeta[o].w,u=n.spriteMeta[o].h,l=t.spriteIndices.get(r)*12;t.spriteData[l+2]=s*i[0],t.spriteData[l+3]=u*i[1];let m=(t.spriteData[l+11]>>16&255)<<16&16711680|a&65535;t.spriteData[l+11]=m,t.dirty=!0}function Ge(e,t,r,o){t=t.data;let n=t.spriteIndices.get(r)*12;t.spriteData[n]=o[0],t.spriteData[n+1]=o[1],t.dirty=!0}function Ue(e,t,r,o){t=t.data;let n=t.spriteIndices.get(r)*12;t.spriteData[n+4]=o[0],t.spriteData[n+5]=o[1],t.spriteData[n+6]=o[2],t.spriteData[n+7]=o[3],t.dirty=!0}function Be(e,t,r,o){t=t.data;let n=t.spriteIndices.get(r)*12;t.spriteData[n+8]=o,t.dirty=!0}function Fe(e,t,r,o){t=t.data;let n=t.spriteIndices.get(r)*12;t.spriteData[n+9]=o,t.dirty=!0}function ze(e,t,r,o,i,n,a,s,u,c){let l=e.resources.spritesheet.data.spritesheet;t=t.data;let p=t.spriteIndices.get(r);Q(t,l,p,o,i,n,a,s,u,c),t.dirty=!0}function Q(e,t,r,o,i,n,a,s,u,c){if(!t.spriteMeta[o])throw new Error(`Sprite name ${o} could not be found in the spritesheet metaData`);let l=r*12,p=t.spriteMeta[o].w,m=t.spriteMeta[o].h,d=t.locations.indexOf(o),g=c<<16&16711680|d&65535;e.spriteData[l]=i[0],e.spriteData[l+1]=i[1],e.spriteData[l+2]=p*n[0],e.spriteData[l+3]=m*n[1],e.spriteData[l+4]=a[0],e.spriteData[l+5]=a[1],e.spriteData[l+6]=a[2],e.spriteData[l+7]=a[3],e.spriteData[l+8]=s,e.spriteData[l+9]=u,e.spriteData[l+11]=g}var K={type:"sprite",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"hdr",type:"webGpuTextureFrameView",format:"rgba16float",access:"write"},{name:"emissive",type:"webGpuTextureFrameView",format:"rgba16float",access:"write"}],onInit:async function(e,t={}){return Me(e,t)},onRun:function(e,t,r,o){De(e,t,r,o)},onDestroy:function(e,t){Oe(t)},onResize:function(e,t){},onViewportPosition:function(e,t){},customFunctions:{...h}};async function Me(e,t){let{device:r}=e,o=16192,i=o,n=2,a=Float32Array.BYTES_PER_ELEMENT*n,s=2,u=Float32Array.BYTES_PER_ELEMENT*s,c=4,l=Float32Array.BYTES_PER_ELEMENT*c,p=4,m=Float32Array.BYTES_PER_ELEMENT*p,d=r.createBuffer({size:(a+u+l+m)*i,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),g=r.createBindGroup({layout:e.resources.spritesheet.data.bindGroupLayout,entries:[{binding:0,resource:{buffer:e.resources.spritesheet.data.uniformBuffer}},{binding:1,resource:e.resources.spritesheet.data.colorTexture.view},{binding:2,resource:e.resources.spritesheet.data.colorTexture.sampler},{binding:3,resource:{buffer:d}},{binding:4,resource:e.resources.spritesheet.data.emissiveTexture.view}]});return{instancedDrawCalls:new Uint32Array(o*2),instancedDrawCallCount:0,bindGroup:g,spriteBuffer:d,spriteData:new Float32Array(o*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function De(e,t,r,o){let{device:i}=e,n=o===0?"clear":"load";t.data.dirty&&(Ie(t.data),t.data.dirty=!1),i.queue.writeBuffer(t.data.spriteBuffer,0,t.data.spriteData.buffer);let a=r.beginRenderPass({colorAttachments:[{view:e.resources.hdr.data.value.view,clearValue:e.clearValue,loadOp:n,storeOp:"store"},{view:e.resources.emissive.data.value.view,clearValue:e.clearValue,loadOp:"clear",storeOp:"store"}]});a.setPipeline(e.resources.spritesheet.data.pipeline),a.setBindGroup(0,t.data.bindGroup),a.setVertexBuffer(0,e.resources.spritesheet.data.quads.buffer);let s=6,u=0;for(let c=0;c<t.data.instancedDrawCallCount;c++){let l=t.data.instancedDrawCalls[c*2]*s,p=t.data.instancedDrawCalls[c*2+1];a.draw(s,p,l,u),u+=p}a.end()}function Ie(e){let t=-1,r=0;e.instancedDrawCallCount=0;for(let o=0;o<e.spriteCount;o++){let i=e.spriteData[o*12+11]&65535;i!==t&&(r>0&&(e.instancedDrawCalls[e.instancedDrawCallCount*2]=t,e.instancedDrawCalls[e.instancedDrawCallCount*2+1]=r,e.instancedDrawCallCount++),t=i,r=0),r++}r>0&&(e.instancedDrawCalls[e.instancedDrawCallCount*2]=t,e.instancedDrawCalls[e.instancedDrawCallCount*2+1]=r,e.instancedDrawCallCount++)}function Oe(e){e.data.instancedDrawCalls=null,e.data.bindGroup=null,e.data.spriteBuffer.destroy(),e.data.spriteBuffer=null,e.data.spriteData=null,e.data.spriteIndices.clear(),e.data.spriteIndices=null}async function y(e,t,r,o="rgba8unorm"){let n=await(await fetch(r)).blob(),a=await createImageBitmap(n),s=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT,u=1,c=v(e.device,t,a.width,a.height,u,o,s);e.device.queue.copyExternalImageToTexture({source:a},{texture:c.texture},{width:a.width,height:a.height});let l={addressModeU:"repeat",addressModeV:"repeat",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",maxAnisotropy:1};return c.sampler=e.device.createSampler(l),c}var $={type:"tile",refs:[{name:"tileAtlas",type:"webGpuTextureFrameView",format:"rgba8unorm",access:"write"}],onInit:async function(e,t={}){return Re(e,t)},onRun:function(e,t,r){Le(e,t,r)},onDestroy:function(e,t){},onResize:function(e,t){},onViewportPosition:function(e,t){}};async function Re(e,t){let{device:r}=e,o=await y(e,"tile map",t.options.textureUrl),i=new Float32Array([t.options.scrollScale,t.options.scrollScale]),n=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,a={size:i.byteLength,usage:n,mappedAtCreation:!0},s=r.createBuffer(a);return new Float32Array(s.getMappedRange()).set(i),s.unmap(),{bindGroup:r.createBindGroup({layout:e.resources.tileAtlas.data.tileBindGroupLayout,entries:[{binding:0,resource:{buffer:s}},{binding:1,resource:o.view},{binding:2,resource:o.sampler}]}),material:o,uniformBuffer:s,scrollScale:t.options.scrollScale}}function Le(e,t,r,o){let{device:i}=e,n=o===0?"clear":"load",a=r.beginRenderPass({colorAttachments:[{view:e.resources.hdr.data.value.view,clearValue:e.clearValue,loadOp:n,storeOp:"store"}]}),s=e.resources.tileAtlas.data;a.setPipeline(s.pipeline),a.setVertexBuffer(0,s.quad.buffer),a.setBindGroup(0,t.data.bindGroup),a.setBindGroup(1,s.atlasBindGroup),a.draw(6,1,0,0),a.end()}function M(e){let t=new Float32Array([-1,-1,0,1,1,-1,1,1,1,1,1,0,-1,-1,0,1,1,1,1,0,-1,1,0,0]),r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,o={size:t.byteLength,usage:r,mappedAtCreation:!0},i=e.createBuffer(o);return new Float32Array(i.getMappedRange()).set(t),i.unmap(),{buffer:i,bufferLayout:{arrayStride:16,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x2",offset:8}]}}}var D="struct TransformData{viewOffset:vec2<f32>,viewportSize:vec2<f32>,inverseAtlasTextureSize:vec2<f32>,tileSize:f32,inverseTileSize:f32,};struct TileScroll{scrollScale:vec2<f32>};@binding(0)@group(0)var<uniform> myScroll:TileScroll;@binding(1)@group(0)var tileTexture:texture_2d<f32>;@binding(2)@group(0)var tileSampler:sampler;@binding(0)@group(1)var<uniform> transformUBO:TransformData;@binding(1)@group(1)var atlasTexture:texture_2d<f32>;@binding(2)@group(1)var atlasSampler:sampler;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec2<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;let inverseTileTextureSize=1/vec2<f32>(textureDimensions(tileTexture,0));var scrollScale=myScroll.scrollScale;var viewOffset:vec2<f32>=transformUBO.viewOffset*scrollScale;let PixelCoord=(vertexTexCoord*transformUBO.viewportSize)+viewOffset;output.TexCoord=PixelCoord/transformUBO.tileSize;output.Position=vec4<f32>(vertexPosition,0.0,1.0);return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{var tilemapCoord=floor(TexCoord);var u_tilemapSize=vec2<f32>(textureDimensions(tileTexture,0));var tileFoo=fract((tilemapCoord+vec2<f32>(0.5,0.5))/u_tilemapSize);var tile=floor(textureSample(tileTexture,tileSampler,tileFoo)*255.0);if(tile.x==255&&tile.y==255){discard;}var u_tilesetSize=vec2<f32>(textureDimensions(atlasTexture,0))/transformUBO.tileSize;let u_tileUVMinBounds=vec2<f32>(0.5/transformUBO.tileSize,0.5/transformUBO.tileSize);let u_tileUVMaxBounds=vec2<f32>((transformUBO.tileSize-0.5)/transformUBO.tileSize,(transformUBO.tileSize-0.5)/transformUBO.tileSize);var texcoord=clamp(fract(TexCoord),u_tileUVMinBounds,u_tileUVMaxBounds);var tileCoord=(tile.xy+texcoord)/u_tilesetSize;var color=textureSample(atlasTexture,atlasSampler,tileCoord);if(color.a<=0.1){discard;}return color;}";var b=new Float32Array(8),Z={type:"tileAtlas",refs:[],onInit:async function(e,t={}){return Ae(e,t)},onRun:function(e,t,r){},onDestroy:function(e,t){Ve(t)},onResize:function(e,t){J(e)},onViewportPosition:function(e,t){J(e)}};async function Ae(e,t){let{device:r}=e,o=M(r),i=await y(e,"tile atlas",t.options.textureUrl),n=r.createBuffer({size:32,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),a=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),s=r.createBindGroup({layout:a,entries:[{binding:0,resource:{buffer:n}},{binding:1,resource:i.view},{binding:2,resource:i.sampler}]}),u=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),c=r.createPipelineLayout({bindGroupLayouts:[u,a]});return{pipeline:r.createRenderPipeline({label:"tile",vertex:{module:r.createShaderModule({code:D}),entryPoint:"vs_main",buffers:[o.bufferLayout]},fragment:{module:r.createShaderModule({code:D}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:c}),uniformBuffer:n,atlasBindGroup:s,atlasMaterial:i,tileBindGroupLayout:u,tileMaterials:{},tileBindGroups:{},quad:o,tileSize:t.options.tileSize,tileScale:t.options.tileScale}}function Ve(e){e.atlasMaterial.texture.destroy(),e.atlasMaterial.texture=void 0}function J(e){b[0]=e.viewport.position[0],b[1]=e.viewport.position[1];let t=e.resources.tileAtlas.data,{tileScale:r,tileSize:o}=t,i=e.viewport.width/e.viewport.zoom,n=e.viewport.height/e.viewport.zoom;b[2]=i/r,b[3]=n/r,b[4]=1/t.atlasMaterial.texture.width,b[5]=1/t.atlasMaterial.texture.height,b[6]=o,b[7]=1/o,e.device.queue.writeBuffer(t.uniformBuffer,0,b,0,8)}function I(e,t){let r=t.vertices,o=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,i={size:r.byteLength,usage:o,mappedAtCreation:!0},n=e.createBuffer(i);return new Float32Array(n.getMappedRange()).set(r),n.unmap(),{buffer:n,bufferLayout:{arrayStride:20,stepMode:"vertex",attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x2",offset:12}]}}}function O(e){let r=Object.keys(e.frames).length,o=new Float32Array(r*30),i=[],n={},a=0;for(let s in e.frames){let u=e.frames[s];i.push(s),n[s]=u.sourceSize;let c=-.5+u.spriteSourceSize.x/u.sourceSize.w,l=-.5+u.spriteSourceSize.y/u.sourceSize.h,p=-.5+(u.spriteSourceSize.x+u.spriteSourceSize.w)/u.sourceSize.w,m=-.5+(u.spriteSourceSize.y+u.spriteSourceSize.h)/u.sourceSize.h,d=[c,l,0],g=[c,m,0],_=[p,m,0],U=[p,l,0],E=0+u.frame.x/e.meta.size.w,C=0+u.frame.y/e.meta.size.h,P=0+(u.frame.x+u.frame.w)/e.meta.size.w,A=0+(u.frame.y+u.frame.h)/e.meta.size.h,V=[E,C],le=[E,A],N=[P,A],pe=[P,C];o.set(d,a),o.set(V,a+3),o.set(g,a+5),o.set(le,a+8),o.set(_,a+10),o.set(N,a+13),o.set(d,a+15),o.set(V,a+18),o.set(_,a+20),o.set(N,a+23),o.set(U,a+25),o.set(pe,a+28),a+=30}return{spriteMeta:n,locations:i,vertices:o}}var R="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,emissiveIntensity:f32,sortValue:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;@binding(4)@group(0)var emissiveTexture:texture_2d<f32>;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};struct GBufferOutput{@location(0)color:vec4<f32>,@location(1)emissive:vec4<f32>,}@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->GBufferOutput{var output:GBufferOutput;var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);output.color=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);let emissive=textureSample(emissiveTexture,mySampler,TexCoord);output.emissive=vec4(emissive.rgb,1.0)*emissive.a;return output;}";import{default as Mt}from"https://cdn.jsdelivr.net/gh/mreinstein/remove-array-items/src/remove-array-items.js";import{default as It}from"https://cdn.skypack.dev/pin/round-half-up-symmetric@v2.0.0-pfMZ4UGGs9FcqO8UiEHO/mode=imports,min/optimized/round-half-up-symmetric.js";import{mat4 as S,vec2 as Rt,vec3 as T,vec4 as ee}from"https://wgpu-matrix.org/dist/2.x/wgpu-matrix.module.js";var te=T.create(0,0,0),oe={type:"spritesheet",refs:[],onInit:async function(e,t={}){return qe(e,t)},onRun:function(e,t,r){},onDestroy:function(e,t){Ye(t)},onResize:function(e,t){re(e,t)},onViewportPosition:function(e,t){re(e,t)}};async function qe(e,t){let{canvas:r,device:o}=e,i=await We(t.options.spriteSheetJsonUrl);i=O(i);let n=I(o,i),[a,s]=await Promise.all([y(e,"sprite",t.options.colorTextureUrl,"rgba8unorm"),y(e,"emissive sprite",t.options.emissiveTextureUrl,"rgba8unorm")]);r.style.imageRendering="pixelated";let u=o.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),c=o.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}}]}),l=o.createPipelineLayout({bindGroupLayouts:[c]}),p=o.createRenderPipeline({label:"sprite",vertex:{module:o.createShaderModule({code:R}),entryPoint:"vs_main",buffers:[n.bufferLayout]},fragment:{module:o.createShaderModule({code:R}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}},{format:"rgba16float"}]},primitive:{topology:"triangle-list"},layout:l});return{renderPassLookup:new Map,pipeline:p,uniformBuffer:u,quads:n,colorTexture:a,emissiveTexture:s,bindGroupLayout:c,spritesheet:i}}function Ye(e){e.data.renderPassLookup.clear(),e.data.quads.buffer.destroy(),e.data.colorTexture.buffer.destroy(),e.data.uniformBuffer.destroy(),e.data.emissiveTexture.texture.destroy()}async function We(e){return(await fetch(e)).json()}function re(e,t){let{device:r}=e,o=e.viewport.width/e.viewport.zoom,i=e.viewport.height/e.viewport.zoom,n=S.ortho(0,o,i,0,-10,10);T.set(-e.viewport.position[0],-e.viewport.position[1],0,te);let a=S.translation(te);r.queue.writeBuffer(t.data.uniformBuffer,0,a.buffer),r.queue.writeBuffer(t.data.uniformBuffer,64,n.buffer)}var ie={type:"fbTexture",refs:[],onInit:async function(e,t={}){return Xe(e,t)},onRun:function(e,t,r){},onDestroy:function(e,t){ne(t)},onResize:function(e,t){He(e,t)},onViewportPosition:function(e,t){}};async function Xe(e,t){let{device:r}=e,{label:o,mip_count:i,format:n,usage:a,viewportScale:s}=t.options;return{value:v(r,o,e.viewport.width*s,e.viewport.height*s,i,n,a),config:{label:o,mip_count:i,format:n,usage:a,viewportScale:s}}}function ne(e,t){t.data.value.texture.destroy()}function He(e,t){let{device:r}=e;ne(e,t);let{width:o,height:i}=e.viewport,{options:n}=t,a=t.options.viewportScale;t.data.value=v(r,n.label,o*a,i*a,n.mip_count,n.format,n.usage)}var L="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->@location(0)vec4<f32>{var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);var output=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);return output;}";var rr=ee.create(),ae=T.create(),ce={type:"overlay",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"color",type:"webGpuTextureFrameView",format:"rgba16float",access:"write"}],onInit:async function(e,t={}){return ke(e,t)},onRun:function(e,t,r,o){Qe(e,t,r,o)},onDestroy:function(e,t){$e(t)},onResize:function(e,t){se(e,t)},onViewportPosition:function(e,t){se(e,t)},customFunctions:{...h}};async function ke(e,t){let{device:r}=e,o=16192,i=o,n=2,a=Float32Array.BYTES_PER_ELEMENT*n,s=2,u=Float32Array.BYTES_PER_ELEMENT*s,c=4,l=Float32Array.BYTES_PER_ELEMENT*c,p=4,m=Float32Array.BYTES_PER_ELEMENT*p,d=r.createBuffer({size:(a+u+l+m)*i,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),g=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),_=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}}]}),U=r.createBindGroup({layout:_,entries:[{binding:0,resource:{buffer:g}},{binding:1,resource:e.resources.spritesheet.data.colorTexture.view},{binding:2,resource:e.resources.spritesheet.data.colorTexture.sampler},{binding:3,resource:{buffer:d}}]}),E=r.createPipelineLayout({bindGroupLayouts:[_]}),C=r.createRenderPipeline({label:"overlay",vertex:{module:r.createShaderModule({code:L}),entryPoint:"vs_main",buffers:[e.resources.spritesheet.data.quads.bufferLayout]},fragment:{module:r.createShaderModule({code:L}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:E});return{instancedDrawCalls:new Uint32Array(o*2),instancedDrawCallCount:0,spriteBuffer:d,uniformBuffer:g,pipeline:C,bindGroupLayout:_,bindGroup:U,spriteData:new Float32Array(o*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function Qe(e,t,r,o){let{device:i}=e,n=o===0?"clear":"load";t.data.dirty&&(Ke(t.data),t.data.dirty=!1),i.queue.writeBuffer(t.data.spriteBuffer,0,t.data.spriteData.buffer);let a=r.beginRenderPass({colorAttachments:[{view:t.refs.color,clearValue:e.clearValue,loadOp:"load",storeOp:"store"}]});a.setPipeline(t.data.pipeline),a.setBindGroup(0,t.data.bindGroup),a.setVertexBuffer(0,e.resources.spritesheet.data.quads.buffer);let s=6,u=0;for(let c=0;c<t.data.instancedDrawCallCount;c++){let l=t.data.instancedDrawCalls[c*2]*s,p=t.data.instancedDrawCalls[c*2+1];a.draw(s,p,l,u),u+=p}a.end()}function Ke(e){let t=-1,r=0;e.instancedDrawCallCount=0;for(let o=0;o<e.spriteCount;o++){let i=e.spriteData[o*12+11]&65535;i!==t&&(r>0&&(e.instancedDrawCalls[e.instancedDrawCallCount*2]=t,e.instancedDrawCalls[e.instancedDrawCallCount*2+1]=r,e.instancedDrawCallCount++),t=i,r=0),r++}r>0&&(e.instancedDrawCalls[e.instancedDrawCallCount*2]=t,e.instancedDrawCalls[e.instancedDrawCallCount*2+1]=r,e.instancedDrawCallCount++)}function se(e,t){let o=Math.round(e.viewport.width/1),i=Math.round(e.viewport.height/1),n=S.ortho(0,o,i,0,-10,10);T.set(0,0,0,ae);let a=S.translation(ae);e.device.queue.writeBuffer(t.data.uniformBuffer,0,a.buffer),e.device.queue.writeBuffer(t.data.uniformBuffer,64,n.buffer)}function $e(e){e.data.instancedDrawCalls=null,e.data.bindGroup=null,e.data.spriteBuffer.destroy(),e.data.spriteBuffer=null,e.data.uniformBuffer.destroy(),e.data.uniformBuffer=null,e.data.spriteData=null,e.data.spriteIndices.clear(),e.data.spriteIndices=null}async function fr(e,t,r){let i=await(await navigator.gpu?.requestAdapter({powerPreference:"high-performance"}))?.requestDevice(),n=e.getContext("webgpu"),a=navigator.gpu.getPreferredCanvasFormat();return n.configure({device:i,format:a,alphaMode:"opaque"}),{nodeDefs:{bloom:X,composite:k,sprite:K,tile:$,tileAtlas:Z,spritesheet:oe,fbTexture:ie,overlay:ce},nodes:[],resources:{},canvas:e,device:i,context:n,clearValue:{r:0,g:0,b:0,a:1},viewport:{width:t,height:r,zoom:1,position:[0,0]}}}function dr(e,t){if(!e.nodeDefs[nodeData?.type])throw new Error("Can't initialize a new node missing a type.");e.nodeDefs[t.type]=t}async function mr(e,t){if(!t.name)throw new Error("Can't create a resource node without a name property.");return e.resources[t.name]=await Je(e,t),e.resources[t.name]}async function Je(e,t){let r=e.nodeDefs[t?.type];if(!r)throw new Error("Can't initialize a new node missing a type.");let o=await r.onInit(e,t),i={type:t.type,refs:t.refs||{},options:t.options||{},data:o||{}},n=r.customFunctions||{};for(let a in n)i[a]=function(...s){return n[a](e,i,...s)};return e.nodes.push(i),i}function vr(e){let{device:t,context:r}=e,o=t.createCommandEncoder(),i=e.context.getCurrentTexture().createView(),n=0;for(let a of e.nodes){let s=e.nodeDefs[a.type];for(let u of s.refs)u.type==="webGpuTextureFrameView"&&(a.refs[u.name]=i);s.onRun(e,a,o,n),n++}t.queue.submit([o.finish()])}function xr(e){for(let t in e.resources){let r=e.resources[t];e.nodeDefs[r.type].onDestroy(e,r)}e.resources={};for(let t of e.nodes)e.nodeDefs[t.type].onDestroy(e,t);e.nodes.length=0}function gr(e,t,r){e.viewport.width=t,e.viewport.height=r;for(let o in e.resources){let i=e.resources[o];e.nodeDefs[i.type].onResize(e,i)}for(let o of e.nodes)e.nodeDefs[o.type].onResize(e,o)}function _r(e,t){e.viewport.position[0]=t[0]-e.viewport.width/2/e.viewport.zoom,e.viewport.position[1]=t[1]-e.viewport.height/2/e.viewport.zoom;for(let r in e.resources){let o=e.resources[r];e.nodeDefs[o.type].onViewportPosition(e,o)}for(let r of e.nodes)e.nodeDefs[r.type].onViewportPosition(e,r)}export{mr as addResourceNode,v as createTexture,dr as defineNode,vr as draw,fr as init,Je as initNode,xr as reset,gr as setViewportDimensions,_r as setViewportPosition};

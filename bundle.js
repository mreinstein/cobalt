var Ee=Object.defineProperty;var Ge=(t,e)=>{for(var r in e)Ee(t,r,{get:e[r],enumerable:!0})};function g(t,e,r,o,a,i,s){let u=t.createTexture({label:e,size:{width:r,height:o},format:i,usage:s,mipLevelCount:a,sampleCount:1,dimension:"2d"}),n=u.createView(),c=[];for(let f=0;f<a;f++)c.push(u.createView({label:e,format:i,dimension:"2d",aspect:"all",baseMipLevel:f,mipLevelCount:1,baseArrayLayer:0,arrayLayerCount:1}));let l=t.createSampler({label:`${e} sampler`,addressModeU:"clamp-to-edge",addressModeV:"clamp-to-edge",addressModeW:"clamp-to-edge",magFilter:"linear",minFilter:"linear",mipmapFilter:"linear"});return{size:{width:r,height:o},texture:u,view:n,mip_view:c,sampler:l}}async function S(t,e,r,o="rgba8unorm"){let i=await(await fetch(r)).blob(),s=await createImageBitmap(i),u=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT,c=g(t.device,e,s.width,s.height,1,o,u);t.device.queue.copyExternalImageToTexture({source:s},{texture:c.texture},{width:s.width,height:s.height});let l={addressModeU:"repeat",addressModeV:"repeat",magFilter:"nearest",minFilter:"nearest",mipmapFilter:"nearest",maxAnisotropy:1};return c.sampler=t.device.createSampler(l),c}var k="const BLOOM_MIP_COUNT:i32=7;const MODE_PREFILTER:u32=0u;const MODE_DOWNSAMPLE:u32=1u;const MODE_UPSAMPLE_FIRST:u32=2u;const MODE_UPSAMPLE:u32=3u;const EPSILON:f32=1.0e-4;struct bloom_param{parameters:vec4<f32>,combine_constant:f32,doop:u32,ferp:u32,}struct mode_lod_param{mode_lod:u32,}@group(0)@binding(0)var output_texture:texture_storage_2d<rgba16float,write>;@group(0)@binding(1)var input_texture:texture_2d<f32>;@group(0)@binding(2)var bloom_texture:texture_2d<f32>;@group(0)@binding(3)var samp:sampler;@group(0)@binding(4)var<uniform> param:bloom_param;@group(0)@binding(5)var<uniform> pc:mode_lod_param;fn QuadraticThreshold(color:vec4<f32>,threshold:f32,curve:vec3<f32>)->vec4<f32>{let brightness=max(max(color.r,color.g),color.b);var rq:f32=clamp(brightness-curve.x,0.0,curve.y);rq=curve.z*(rq*rq);let ret_color=color*max(rq,brightness-threshold)/max(brightness,EPSILON);return ret_color;}fn Prefilter(color:vec4<f32>,uv:vec2<f32>)->vec4<f32>{let clamp_value=20.0;var c=min(vec4<f32>(clamp_value),color);c=QuadraticThreshold(color,param.parameters.x,param.parameters.yzw);return c;}fn DownsampleBox13(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,tex_size:vec2<f32>)->vec3<f32>{let A=textureSampleLevel(tex,samp,uv,lod).rgb;let texel_size=tex_size*0.5;let B=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,-1.0),lod).rgb;let C=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-1.0,1.0),lod).rgb;let D=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,1.0),lod).rgb;let E=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(1.0,-1.0),lod).rgb;let F=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let G=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,0.0),lod).rgb;let H=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,2.0),lod).rgb;let I=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let J=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,2.0),lod).rgb;let K=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(2.0,0.0),lod).rgb;let L=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(-2.0,-2.0),lod).rgb;let M=textureSampleLevel(tex,samp,uv+texel_size*vec2<f32>(0.0,-2.0),lod).rgb;var result:vec3<f32>=vec3<f32>(0.0);result=result+(B+C+D+E)*0.5;result=result+(F+G+A+M)*0.125;result=result+(G+H+I+A)*0.125;result=result+(A+I+J+K)*0.125;result=result+(M+A+K+L)*0.125;result=result*0.25;return result;}fn UpsampleTent9(tex:texture_2d<f32>,lod:f32,uv:vec2<f32>,texel_size:vec2<f32>,radius:f32)->vec3<f32>{let offset=texel_size.xyxy*vec4<f32>(1.0,1.0,-1.0,0.0)*radius;var result:vec3<f32>=textureSampleLevel(tex,samp,uv,lod).rgb*4.0;result=result+textureSampleLevel(tex,samp,uv-offset.xy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv-offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv-offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.zw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xw,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.zy,lod).rgb;result=result+textureSampleLevel(tex,samp,uv+offset.wy,lod).rgb*2.0;result=result+textureSampleLevel(tex,samp,uv+offset.xy,lod).rgb;return result*(1.0/16.0);}fn combine(ex_color:vec3<f32>,color_to_add:vec3<f32>,combine_constant:f32)->vec3<f32>{let existing_color=ex_color+(-color_to_add);let blended_color=(combine_constant*existing_color)+color_to_add;return blended_color;}@compute @workgroup_size(8,4,1)fn cs_main(@builtin(global_invocation_id)global_invocation_id:vec3<u32>){let mode=pc.mode_lod>>16u;let lod=pc.mode_lod&65535u;let imgSize=textureDimensions(output_texture);if(global_invocation_id.x<=u32(imgSize.x)&&global_invocation_id.y<=u32(imgSize.y)){var texCoords:vec2<f32>=vec2<f32>(f32(global_invocation_id.x)/f32(imgSize.x),f32(global_invocation_id.y)/f32(imgSize.y));texCoords=texCoords+(1.0/vec2<f32>(imgSize))*0.5;let texSize=vec2<f32>(textureDimensions(input_texture,i32(lod)));var color:vec4<f32>=vec4<f32>(1.0);if(mode==MODE_PREFILTER){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);color=Prefilter(color,texCoords);}else if(mode==MODE_DOWNSAMPLE){color=vec4<f32>(DownsampleBox13(input_texture,f32(lod),texCoords,1.0/texSize),1.0);}else if(mode==MODE_UPSAMPLE_FIRST){let bloomTexSize=textureDimensions(input_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(input_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}else if(mode==MODE_UPSAMPLE){let bloomTexSize=textureDimensions(bloom_texture,i32(lod)+1);let sampleScale=1.0;let upsampledTexture=UpsampleTent9(bloom_texture,f32(lod)+1.0,texCoords,1.0/vec2<f32>(bloomTexSize),sampleScale);let existing=textureSampleLevel(input_texture,samp,texCoords,f32(lod)).rgb;color=vec4<f32>(combine(existing,upsampledTexture,param.combine_constant),1.0);}textureStore(output_texture,vec2<i32>(global_invocation_id.xy),color);}}";var _=7,Be=0,Q=1,Ue=2,K=3,$={type:"bloom",refs:[{name:"emissive",type:"textureView",format:"rgba16",access:"read"},{name:"hdr",type:"textureView",format:"rgba16",access:"read"},{name:"bloom",type:"textureView",format:"rgba16",access:"readwrite"}],onInit:async function(t,e={}){return Fe(t,e)},onRun:function(t,e,r){De(t,e.data,r)},onDestroy:function(t,e){Z(e)},onResize:function(t,e){Pe(t,e)},onViewportPosition:function(t,e){}};function Fe(t,e){let{device:r}=t,o=t.viewport.width,a=t.viewport.height,i={compute_pipeline:null,bind_group:[],bind_group_layout:[],bind_groups_textures:[]},s=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:"write-only",format:"rgba16float",viewDimension:"2d"}},{binding:1,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:2,visibility:GPUShaderStage.COMPUTE,texture:{sampleType:"float",viewDimension:"2d",multisampled:!1}},{binding:3,visibility:GPUShaderStage.COMPUTE,sampler:{}},{binding:4,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}},{binding:5,visibility:GPUShaderStage.COMPUTE,buffer:{type:"uniform"}}]});i.bind_group_layout.push(s),i.bind_groups_textures.push(g(r,"bloom downsampler image 0",o/2,a/2,_,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),i.bind_groups_textures.push(g(r,"bloom downsampler image 1",o/2,a/2,_,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),i.bind_groups_textures.push(e.refs.bloom.data);let u=r.createPipelineLayout({bindGroupLayouts:i.bind_group_layout}),n=r.createComputePipeline({layout:u,compute:{module:r.createShaderModule({code:k}),entryPoint:"cs_main"}});return J(t,i,e.refs),i.compute_pipeline=n,i}function J(t,e,r={}){let{device:o}=t,a=.1,i=.2,s=.68,u=new Float32Array([a,a-i,i*2,.25/i,s,0,0,0]),n=o.createBuffer({label:"bloom static parameters buffer",size:u.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(n.getMappedRange()).set(u),n.unmap(),e.bind_group.length=0,e.params_buf=n,e.bind_group.push(C(o,e,e.bind_groups_textures[0].mip_view[0],r.emissive.data.view,r.hdr.data.view,r.hdr.data.sampler,n,Be<<16|0));for(let l=1;l<_;l++)e.bind_group.push(C(o,e,e.bind_groups_textures[1].mip_view[l],e.bind_groups_textures[0].view,r.hdr.data.view,r.hdr.data.sampler,n,Q<<16|l-1)),e.bind_group.push(C(o,e,e.bind_groups_textures[0].mip_view[l],e.bind_groups_textures[1].view,r.hdr.data.view,r.hdr.data.sampler,n,Q<<16|l));e.bind_group.push(C(o,e,e.bind_groups_textures[2].mip_view[_-1],e.bind_groups_textures[0].view,r.hdr.data.view,r.hdr.data.sampler,n,Ue<<16|_-2));let c=!0;for(let l=_-2;l>=0;l--)c?(e.bind_group.push(C(o,e,e.bind_groups_textures[1].mip_view[l],e.bind_groups_textures[0].view,e.bind_groups_textures[2].view,r.hdr.data.sampler,n,K<<16|l)),c=!1):(e.bind_group.push(C(o,e,e.bind_groups_textures[2].mip_view[l],e.bind_groups_textures[0].view,e.bind_groups_textures[1].view,r.hdr.data.sampler,n,K<<16|l)),c=!0)}function C(t,e,r,o,a,i,s,u){let n=new Uint32Array([u]),c=t.createBuffer({label:"bloom static mode_lod buffer",size:n.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});return new Uint32Array(c.getMappedRange()).set(n),c.unmap(),t.createBindGroup({label:"bloom bind group layout",layout:e.bind_group_layout[0],entries:[{binding:0,resource:r},{binding:1,resource:o},{binding:2,resource:a},{binding:3,resource:i},{binding:4,resource:{buffer:s}},{binding:5,resource:{buffer:c}}]})}function De(t,e,r){let u=0,n=r.beginComputePass({label:"bloom Compute Pass"});n.setPipeline(e.compute_pipeline),n.setBindGroup(0,e.bind_group[u]),u+=1;let c=z(0,e.bind_groups_textures[0]);n.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let l=1;l<_;l++)c=z(l,e.bind_groups_textures[0]),n.setBindGroup(0,e.bind_group[u]),u+=1,n.dispatchWorkgroups(c.width/8+1,c.height/4+1,1),n.setBindGroup(0,e.bind_group[u]),u+=1,n.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);n.setBindGroup(0,e.bind_group[u]),u+=1,c=z(_-1,e.bind_groups_textures[2]),n.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);for(let l=_-2;l>=0;l--)c=z(l,e.bind_groups_textures[2]),n.setBindGroup(0,e.bind_group[u]),u+=1,n.dispatchWorkgroups(c.width/8+1,c.height/4+1,1);n.end()}function z(t,e){let r=e.size.width,o=e.size.height;for(let a=0;a<t;a++)r/=2,o/=2;return{width:r,height:o,depthOrArrayLayers:1}}function Pe(t,e){let{device:r}=t,o=e.data;Z(o),o.bind_groups_textures.push(g(r,"bloom downsampler image 0",t.viewport.width/2,t.viewport.height/2,_,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(g(r,"bloom downsampler image 1",t.viewport.width/2,t.viewport.height/2,_,"rgba16float",GPUTextureUsage.STORAGE_BINDING|GPUTextureUsage.TEXTURE_BINDING)),o.bind_groups_textures.push(e.refs.bloom.data),J(t,o,e.refs)}function Z(t){for(let e of t.bind_groups_textures)e.texture.destroy();t.bind_groups_textures.length=0}var I="struct BloomComposite{bloom_intensity:f32,bloom_combine_constant:f32,}@group(0)@binding(0)var mySampler:sampler;@group(0)@binding(1)var colorTexture:texture_2d<f32>;@group(0)@binding(2)var emissiveTexture:texture_2d<f32>;@group(0)@binding(3)var<uniform> composite_parameter:BloomComposite;struct VertexOutput{@builtin(position)Position:vec4<f32>,@location(0)fragUV:vec2<f32>,}@vertex fn vert_main(@builtin(vertex_index)VertexIndex:u32)->VertexOutput{const pos=array(vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0),);const uv=array(vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,0.0),);var output:VertexOutput;output.Position=vec4(pos[VertexIndex],0.0,1.0);output.fragUV=uv[VertexIndex];return output;}fn GTTonemap_point(x:f32)->f32{let m:f32=0.22;let a:f32=1.0;let c:f32=1.33;let P:f32=1.0;let l:f32=0.4;let l0:f32=((P-m)*l)/a;let S0:f32=m+l0;let S1:f32=m+a*l0;let C2:f32=(a*P)/(P-S1);let L:f32=m+a*(x-m);let T:f32=m*pow(x/m,c);let S:f32=P-(P-S1)*exp(-C2*(x-S0)/P);let w0:f32=1.0-smoothstep(0.0,m,x);var w2:f32=1.0;if(x<m+l){w2=0.0;}let w1:f32=1.0-w0-w2;return f32(T*w0+L*w1+S*w2);}fn GTTonemap(x:vec3<f32>)->vec3<f32>{return vec3<f32>(GTTonemap_point(x.r),GTTonemap_point(x.g),GTTonemap_point(x.b));}fn aces(x:vec3<f32>)->vec3<f32>{let a:f32=2.51;let b:f32=0.03;let c:f32=2.43;let d:f32=0.59;let e:f32=0.14;return clamp((x*(a*x+b))/(x*(c*x+d)+e),vec3<f32>(0.0),vec3<f32>(1.0));}@fragment fn frag_main(@location(0)fragUV:vec2<f32>)->@location(0)vec4<f32>{let hdr_color=textureSample(colorTexture,mySampler,fragUV);let bloom_color=textureSample(emissiveTexture,mySampler,fragUV);let combined_color=((bloom_color*composite_parameter.bloom_intensity)*composite_parameter.bloom_combine_constant);let mapped_color=GTTonemap(combined_color.rgb);let gamma_corrected_color=pow(mapped_color,vec3<f32>(1.0/2.2));return vec4<f32>(gamma_corrected_color+hdr_color.rgb,1.0);}";var ee={type:"bloom",refs:[{name:"hdr",type:"textureView",format:"rgba16",access:"read"},{name:"bloom",type:"textureView",format:"rgba16",access:"read"},{name:"combined",type:"textureView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return ze(t,e)},onRun:function(t,e,r){Re(t,e,r)},onDestroy:function(t,e){},onResize:function(t,e){Ie(t,e)},onViewportPosition:function(t,e){}};function ze(t,e){let{device:r}=t,o=navigator.gpu.getPreferredCanvasFormat(),a=40,i=.68,s=new Float32Array([a,i]),u=r.createBuffer({label:"scene composite params buffer",size:s.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(u.getMappedRange()).set(s),u.unmap();let n=r.createRenderPipeline({layout:"auto",vertex:{module:r.createShaderModule({code:I}),entryPoint:"vert_main"},fragment:{module:r.createShaderModule({code:I}),entryPoint:"frag_main",targets:[{format:o}]},primitive:{topology:"triangle-list"}});return{bindGroup:r.createBindGroup({layout:n.getBindGroupLayout(0),entries:[{binding:0,resource:e.refs.hdr.data.sampler},{binding:1,resource:e.refs.hdr.data.view},{binding:2,resource:e.refs.bloom.data.mip_view[0]},{binding:3,resource:{buffer:u}}]}),pipeline:n,params_buf:u}}function Re(t,e,r){let o=r.beginRenderPass({colorAttachments:[{view:e.refs.combined.data.view,clearValue:{r:0,g:0,b:0,a:1},loadOp:"clear",storeOp:"store"}]}),{pipeline:a,bindGroup:i}=e.data;o.setPipeline(a),o.setBindGroup(0,i),o.draw(6,1,0,0),o.end()}function Ie(t,e){let{pipeline:r,params_buf:o}=e.data,{device:a}=t;e.data.bindGroup=a.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:e.refs.hdr.data.sampler},{binding:1,resource:e.refs.hdr.data.view},{binding:2,resource:e.refs.bloom.data.mip_view[0]},{binding:3,resource:{buffer:o}}]})}var U={};Ge(U,{addSprite:()=>Oe,removeSprite:()=>Le,setSprite:()=>We,setSpriteName:()=>Ae,setSpriteOpacity:()=>Ye,setSpritePosition:()=>Ve,setSpriteRotation:()=>qe,setSpriteTint:()=>Ne});function O(t,e,r){if(r.spriteCount===0)return 0;let o=0,a=r.spriteCount-1,i=t<<16&16711680|e&65535;for(;o<=a;){let s=r.spriteData[o*12+11];if(i<=s)return o;let u=r.spriteData[a*12+11];if(i>=u)return a+1;let n=Math.floor((o+a)/2),c=r.spriteData[n*12+11];if(i===c)return n+1;i>c?o=n+1:a=n-1}return o}function B(){return Math.ceil(Math.random()*(Number.MAX_SAFE_INTEGER-10))}function Oe(t,e,r,o,a,i,s,u,n){let c=e.refs.spritesheet.data.spritesheet;e=e.data;let l=c.locations.indexOf(r),f=O(n,l,e),v=(f+1)*12;e.spriteData.set(e.spriteData.subarray(f*12,e.spriteCount*12),v),te(e,c,f,r,o,a,i,s,u,n);for(let[d,x]of e.spriteIndices)x>=f&&e.spriteIndices.set(d,x+1);let m=B();return e.spriteIndices.set(m,f),e.spriteCount++,e.dirty=!0,m}function Le(t,e,r){e=e.data;let o=e.spriteIndices.get(r);for(let[i,s]of e.spriteIndices)s>o&&e.spriteIndices.set(i,s-1);let a=o*12;e.spriteData.set(e.spriteData.subarray((o+1)*12,e.spriteCount*12),a),e.spriteIndices.delete(r),e.spriteCount--,e.dirty=!0}function Ae(t,e,r,o,a){let i=e.refs.spritesheet.data.spritesheet;e=e.data;let s=i.locations.indexOf(o),u=i.spriteMeta[o].w,n=i.spriteMeta[o].h,l=e.spriteIndices.get(r)*12;e.spriteData[l+2]=u*a[0],e.spriteData[l+3]=n*a[1];let v=(e.spriteData[l+11]>>16&255)<<16&16711680|s&65535;e.spriteData[l+11]=v,e.dirty=!0}function Ve(t,e,r,o){e=e.data;let i=e.spriteIndices.get(r)*12;e.spriteData[i]=o[0],e.spriteData[i+1]=o[1],e.dirty=!0}function Ne(t,e,r,o){e=e.data;let i=e.spriteIndices.get(r)*12;e.spriteData[i+4]=o[0],e.spriteData[i+5]=o[1],e.spriteData[i+6]=o[2],e.spriteData[i+7]=o[3],e.dirty=!0}function Ye(t,e,r,o){e=e.data;let i=e.spriteIndices.get(r)*12;e.spriteData[i+8]=o,e.dirty=!0}function qe(t,e,r,o){e=e.data;let i=e.spriteIndices.get(r)*12;e.spriteData[i+9]=o,e.dirty=!0}function We(t,e,r,o,a,i,s,u,n,c){let l=e.refs.spritesheet.data.spritesheet;e=e.data;let f=e.spriteIndices.get(r);te(e,l,f,o,a,i,s,u,n,c),e.dirty=!0}function te(t,e,r,o,a,i,s,u,n,c){if(!e.spriteMeta[o])throw new Error(`Sprite name ${o} could not be found in the spritesheet metaData`);let l=r*12,f=e.spriteMeta[o].w,v=e.spriteMeta[o].h,m=e.locations.indexOf(o),d=c<<16&16711680|m&65535;t.spriteData[l]=a[0],t.spriteData[l+1]=a[1],t.spriteData[l+2]=f*i[0],t.spriteData[l+3]=v*i[1],t.spriteData[l+4]=s[0],t.spriteData[l+5]=s[1],t.spriteData[l+6]=s[2],t.spriteData[l+7]=s[3],t.spriteData[l+8]=u,t.spriteData[l+9]=n,t.spriteData[l+11]=d}var re={type:"sprite",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"hdr",type:"textureView",format:"rgba16float",access:"write"},{name:"emissive",type:"textureView",format:"rgba16float",access:"write"}],onInit:async function(t,e={}){return Xe(t,e)},onRun:function(t,e,r){He(t,e,r)},onDestroy:function(t,e){ke(e)},onResize:function(t,e){},onViewportPosition:function(t,e){},customFunctions:{...U}};async function Xe(t,e){let{device:r}=t,o=16192,a=o,s=Float32Array.BYTES_PER_ELEMENT*2,n=Float32Array.BYTES_PER_ELEMENT*2,l=Float32Array.BYTES_PER_ELEMENT*4,v=Float32Array.BYTES_PER_ELEMENT*4,m=r.createBuffer({size:(s+n+l+v)*a,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),d=e.refs.spritesheet.data,x=r.createBindGroup({layout:e.refs.spritesheet.data.bindGroupLayout,entries:[{binding:0,resource:{buffer:d.uniformBuffer}},{binding:1,resource:d.colorTexture.view},{binding:2,resource:d.colorTexture.sampler},{binding:3,resource:{buffer:m}},{binding:4,resource:d.emissiveTexture.view}]});return{instancedDrawCalls:new Uint32Array(o*2),instancedDrawCallCount:0,bindGroup:x,spriteBuffer:m,spriteData:new Float32Array(o*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function He(t,e,r){let{device:o}=t,a=e.options.loadOp||"load";e.data.dirty&&(je(e.data),e.data.dirty=!1),o.queue.writeBuffer(e.data.spriteBuffer,0,e.data.spriteData.buffer);let i=r.beginRenderPass({colorAttachments:[{view:e.refs.hdr.data.view,clearValue:t.clearValue,loadOp:a,storeOp:"store"},{view:e.refs.emissive.data.view,clearValue:t.clearValue,loadOp:"clear",storeOp:"store"}]});i.setPipeline(e.refs.spritesheet.data.pipeline),i.setBindGroup(0,e.data.bindGroup),i.setVertexBuffer(0,e.refs.spritesheet.data.quads.buffer);let s=6,u=0;for(let n=0;n<e.data.instancedDrawCallCount;n++){let c=e.data.instancedDrawCalls[n*2]*s,l=e.data.instancedDrawCalls[n*2+1];i.draw(s,l,c,u),u+=l}i.end()}function je(t){let e=-1,r=0;t.instancedDrawCallCount=0;for(let o=0;o<t.spriteCount;o++){let a=t.spriteData[o*12+11]&65535;a!==e&&(r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++),e=a,r=0),r++}r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++)}function ke(t){t.data.instancedDrawCalls=null,t.data.bindGroup=null,t.data.spriteBuffer.destroy(),t.data.spriteBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null}var ie={type:"tile",refs:[{name:"tileAtlas",type:"textureView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return Qe(t,e)},onRun:function(t,e,r){Ke(t,e,r)},onDestroy:function(t,e){oe(e)},onResize:function(t,e){},onViewportPosition:function(t,e){},customFunctions:{setTexture:async function(t,e,r){let{device:o}=t;oe(e),e.options.textureUrl=r;let a=await S(t,"tile map",e.options.textureUrl),i=o.createBindGroup({layout:e.refs.tileAtlas.data.tileBindGroupLayout,entries:[{binding:0,resource:{buffer:e.data.uniformBuffer}},{binding:1,resource:a.view},{binding:2,resource:a.sampler}]});e.data.bindGroup=i,e.data.material=a}}};async function Qe(t,e){let{device:r}=t,o=await S(t,"tile map",e.options.textureUrl),a=new Float32Array([e.options.scrollScale,e.options.scrollScale]),i=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,s={size:a.byteLength,usage:i,mappedAtCreation:!0},u=r.createBuffer(s);return new Float32Array(u.getMappedRange()).set(a),u.unmap(),{bindGroup:r.createBindGroup({layout:e.refs.tileAtlas.data.tileBindGroupLayout,entries:[{binding:0,resource:{buffer:u}},{binding:1,resource:o.view},{binding:2,resource:o.sampler}]}),material:o,uniformBuffer:u,scrollScale:e.options.scrollScale}}function Ke(t,e,r){let{device:o}=t,a=e.options.loadOp||"load",i=r.beginRenderPass({colorAttachments:[{view:e.refs.hdr.data.view,clearValue:t.clearValue,loadOp:a,storeOp:"store"}]}),s=e.refs.tileAtlas.data;i.setPipeline(s.pipeline),i.setVertexBuffer(0,s.quad.buffer),i.setBindGroup(0,e.data.bindGroup),i.setBindGroup(1,s.atlasBindGroup),i.draw(6,1,0,0),i.end()}function oe(t){t.data.material.texture.destroy(),t.data.material.texture=void 0}var L="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct displacement_param{offset:vec2<f32>,scale:f32,noop:f32};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var mapTexture:texture_2d<f32>;@binding(4)@group(0)var<uniform> param:displacement_param;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};const sx:f32=1.0;const sy:f32=1.0;const sz:f32=1.0;const tx:f32=1.0;const ty:f32=1.0;const tz:f32=0;const rot:f32=0.0;const s=sin(rot);const c=cos(rot);const scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);const modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;@vertex fn vs_main(@location(0)vertexPosition:vec2<f32>)->Fragment{var output:Fragment;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,0.0,1.0);output.TexCoord=vec2<f32>((output.Position.xy+1.0)/2.0);output.TexCoord.y=1.0-output.TexCoord.y;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{let dims=vec2<f32>(textureDimensions(mapTexture,0));let inv=param.offset/dims;var map:vec4<f32>=textureSample(mapTexture,mySampler,TexCoord+inv);let scale=param.scale;map-=0.5;let invTexSize=1/dims;map.x=scale*invTexSize.x*map.x;map.y=scale*invTexSize.y*map.y;var clamped:vec2<f32>=vec2<f32>(TexCoord.x+map.x,TexCoord.y+map.y);clamped=clamp(clamped,vec2<f32>(0,0),vec2<f32>(1,1));let outColor:vec4<f32>=textureSample(myTexture,mySampler,clamped);return outColor;}";import{default as $t}from"https://cdn.jsdelivr.net/gh/mreinstein/remove-array-items/src/remove-array-items.js";import{default as w}from"https://cdn.skypack.dev/pin/round-half-up-symmetric@v2.0.0-pfMZ4UGGs9FcqO8UiEHO/mode=imports,min/optimized/round-half-up-symmetric.js";import{mat4 as b,vec2 as A,vec3 as y,vec4 as ae}from"https://wgpu-matrix.org/dist/2.x/wgpu-matrix.module.js";var ne=y.create(0,0,0),F=6,se={type:"displacement",refs:[{name:"color",type:"textureView",format:"bgra8unorm",access:"read"},{name:"map",type:"cobaltTexture",format:"bgra8unorm",access:"read"},{name:"out",type:"textureView",format:"bgra8unorm",access:"write"}],onInit:async function(t,e={}){return Je(t,e)},onRun:function(t,e,r){Ze(t,e,r)},onDestroy:function(t,e){et(e)},onResize:function(t,e){tt(t,e)},onViewportPosition:function(t,e){rt(t,e)},customFunctions:{addTriangle:function(t,e,r){let o=B(),a=e.data.spriteCount;e.data.spriteIndices.set(o,a);let i=a*F;return e.data.spriteData[i]=r[0][0],e.data.spriteData[i+1]=r[0][1],e.data.spriteData[i+2]=r[1][0],e.data.spriteData[i+3]=r[1][1],e.data.spriteData[i+4]=r[2][0],e.data.spriteData[i+5]=r[2][1],e.data.spriteCount++,o},removeTriangle:function(t,e,r){e.data.spriteIndices.delete(r),e.data.spriteCount--},setPosition:function(t,e,r,o){let i=e.data.spriteIndices.get(r)*F;e.data.spriteData[i]=o[0][0],e.data.spriteData[i+1]=o[0][1],e.data.spriteData[i+2]=o[1][0],e.data.spriteData[i+3]=o[1][1],e.data.spriteData[i+4]=o[2][0],e.data.spriteData[i+5]=o[2][1]}}};async function Je(t,e){let{device:r}=t,o=new Float32Array([e.options.offseyX??0,e.options.offseyY??0,e.options.scale??20,0]),a=r.createBuffer({label:"displacement options buffer",size:o.byteLength,mappedAtCreation:!0,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST});new Float32Array(a.getMappedRange()).set(o),a.unmap();let i=256,s=i,n=Float32Array.BYTES_PER_ELEMENT*2,l=Float32Array.BYTES_PER_ELEMENT*2,v=Float32Array.BYTES_PER_ELEMENT*2,m=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),d=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:4,visibility:GPUShaderStage.FRAGMENT,buffer:{type:"uniform"}}]}),x=r.createPipelineLayout({bindGroupLayouts:[d]}),E="repeat",h="linear",G=r.createSampler({label:"displacement ampler",addressModeU:E,addressModeV:E,addressModeW:E,magFilter:h,minFilter:h,mipmapFilter:h}),D=r.createBindGroup({layout:d,entries:[{binding:0,resource:{buffer:m}},{binding:1,resource:e.refs.color.data.view},{binding:2,resource:G},{binding:3,resource:e.refs.map.view},{binding:4,resource:{buffer:a}}]}),P=r.createBuffer({size:i*F,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),M={arrayStride:8,stepMode:"vertex",attributes:[{shaderLocation:0,format:"float32x2",offset:0}]},R=r.createRenderPipeline({label:"displacement",vertex:{module:r.createShaderModule({code:L}),entryPoint:"vs_main",buffers:[M]},fragment:{module:r.createShaderModule({code:L}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:x});return{bindGroup:D,bindGroupLayout:d,uniformBuffer:m,sampler:G,pipeline:R,params_buf:a,buffer:P,spriteData:new Float32Array(i*F),spriteCount:0,spriteIndices:new Map}}function Ze(t,e,r){if(e.data.spriteCount===0)return;let{device:o}=t,a=F*e.data.spriteCount*Float32Array.BYTES_PER_ELEMENT;o.queue.writeBuffer(e.data.buffer,0,e.data.spriteData.buffer,0,a);let i=r.beginRenderPass({colorAttachments:[{view:e.refs.out,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});i.setPipeline(e.data.pipeline),i.setBindGroup(0,e.data.bindGroup),i.setVertexBuffer(0,e.data.buffer);let s=e.data.spriteCount*3;i.draw(s,1,0,0),i.end()}function et(t){t.data.bindGroup=null,t.data.buffer.destroy(),t.data.buffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null,t.data.params_buf.destroy(),t.data.params_buf=null}function tt(t,e){let{device:r}=t;e.data.bindGroup=r.createBindGroup({layout:e.data.bindGroupLayout,entries:[{binding:0,resource:{buffer:e.data.uniformBuffer}},{binding:1,resource:e.refs.color.data.view},{binding:2,resource:e.data.sampler},{binding:3,resource:e.refs.map.view},{binding:4,resource:{buffer:e.data.params_buf}}]})}function rt(t,e){let{device:r}=t,o=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,i=b.ortho(0,o,a,0,-10,10);y.set(-w(t.viewport.position[0]),-w(t.viewport.position[1]),0,ne);let s=b.translation(ne);r.queue.writeBuffer(e.data.uniformBuffer,0,s.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,i.buffer)}function V(t,e){let r=e.vertices,o=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,a={size:r.byteLength,usage:o,mappedAtCreation:!0},i=t.createBuffer(a);return new Float32Array(i.getMappedRange()).set(r),i.unmap(),{buffer:i,bufferLayout:{arrayStride:20,stepMode:"vertex",attributes:[{shaderLocation:0,format:"float32x3",offset:0},{shaderLocation:1,format:"float32x2",offset:12}]}}}var N="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->@location(0)vec4<f32>{var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);var output=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);return output;}";var br=ae.create(),ue=y.create(),fe={type:"overlay",refs:[{name:"spritesheet",type:"customResource",access:"read"},{name:"color",type:"textView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return it(t,e)},onRun:function(t,e,r){at(t,e,r)},onDestroy:function(t,e){st(e)},onResize:function(t,e){ce(t,e)},onViewportPosition:function(t,e){ce(t,e)},customFunctions:{...U}};async function it(t,e){let{device:r}=t,o=16192,a=o,s=Float32Array.BYTES_PER_ELEMENT*2,n=Float32Array.BYTES_PER_ELEMENT*2,l=Float32Array.BYTES_PER_ELEMENT*4,v=Float32Array.BYTES_PER_ELEMENT*4,m=r.createBuffer({size:(s+n+l+v)*a,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_DST}),d=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),x=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}}]}),E=r.createBindGroup({layout:x,entries:[{binding:0,resource:{buffer:d}},{binding:1,resource:e.refs.spritesheet.data.colorTexture.view},{binding:2,resource:e.refs.spritesheet.data.colorTexture.sampler},{binding:3,resource:{buffer:m}}]}),h=r.createPipelineLayout({bindGroupLayouts:[x]}),G=r.createRenderPipeline({label:"overlay",vertex:{module:r.createShaderModule({code:N}),entryPoint:"vs_main",buffers:[e.refs.spritesheet.data.quads.bufferLayout]},fragment:{module:r.createShaderModule({code:N}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:h});return{instancedDrawCalls:new Uint32Array(o*2),instancedDrawCallCount:0,spriteBuffer:m,uniformBuffer:d,pipeline:G,bindGroupLayout:x,bindGroup:E,spriteData:new Float32Array(o*12),spriteCount:0,spriteIndices:new Map,dirty:!1}}function at(t,e,r){let{device:o}=t,a=e.options.loadOp||"load";e.data.dirty&&(nt(e.data),e.data.dirty=!1),o.queue.writeBuffer(e.data.spriteBuffer,0,e.data.spriteData.buffer);let i=r.beginRenderPass({colorAttachments:[{view:e.refs.color,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});i.setPipeline(e.data.pipeline),i.setBindGroup(0,e.data.bindGroup),i.setVertexBuffer(0,e.refs.spritesheet.data.quads.buffer);let s=6,u=0;for(let n=0;n<e.data.instancedDrawCallCount;n++){let c=e.data.instancedDrawCalls[n*2]*s,l=e.data.instancedDrawCalls[n*2+1];i.draw(s,l,c,u),u+=l}i.end()}function nt(t){let e=-1,r=0;t.instancedDrawCallCount=0;for(let o=0;o<t.spriteCount;o++){let a=t.spriteData[o*12+11]&65535;a!==e&&(r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++),e=a,r=0),r++}r>0&&(t.instancedDrawCalls[t.instancedDrawCallCount*2]=e,t.instancedDrawCalls[t.instancedDrawCallCount*2+1]=r,t.instancedDrawCallCount++)}function ce(t,e){let o=Math.round(t.viewport.width/1),a=Math.round(t.viewport.height/1),i=b.ortho(0,o,a,0,-10,10);y.set(0,0,0,ue);let s=b.translation(ue);t.device.queue.writeBuffer(e.data.uniformBuffer,0,s.buffer),t.device.queue.writeBuffer(e.data.uniformBuffer,64,i.buffer)}function st(t){t.data.instancedDrawCalls=null,t.data.bindGroup=null,t.data.spriteBuffer.destroy(),t.data.spriteBuffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null,t.data.spriteData=null,t.data.spriteIndices.clear(),t.data.spriteIndices=null}var Y="@binding(0)@group(0)var tileTexture:texture_2d<f32>;@binding(1)@group(0)var tileSampler:sampler;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};const pos=array(vec2(1.0,1.0),vec2(1.0,-1.0),vec2(-1.0,-1.0),vec2(1.0,1.0),vec2(-1.0,-1.0),vec2(-1.0,1.0),);const uv=array(vec2(1.0,0.0),vec2(1.0,1.0),vec2(0.0,1.0),vec2(1.0,0.0),vec2(0.0,1.0),vec2(0.0,0.0),);@vertex fn vs_main(@builtin(vertex_index)VertexIndex:u32)->Fragment{var output:Fragment;output.Position=vec4(pos[VertexIndex],0.0,1.0);output.TexCoord=uv[VertexIndex];return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{var col=textureSample(tileTexture,tileSampler,TexCoord);return vec4<f32>(col.rgb,1.0);}";var pe={type:"fbBlit",refs:[{name:"in",type:"cobaltTexture",format:"bgra8unorm",access:"read"},{name:"out",type:"cobaltTexture",format:"bgra8unorm",access:"write"}],onInit:async function(t,e={}){return ct(t,e)},onRun:function(t,e,r){lt(t,e,r)},onDestroy:function(t,e){},onResize:function(t,e){ft(t,e)},onViewportPosition:function(t,e){}};async function ct(t,e){let{device:r}=t,o=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),a=r.createBindGroup({layout:o,entries:[{binding:0,resource:e.refs.in.data.view},{binding:1,resource:e.refs.in.data.sampler}]}),i=r.createPipelineLayout({bindGroupLayouts:[o]}),s=r.createRenderPipeline({label:"fb-blit",vertex:{module:r.createShaderModule({code:Y}),entryPoint:"vs_main",buffers:[]},fragment:{module:r.createShaderModule({code:Y}),entryPoint:"fs_main",targets:[{format:"bgra8unorm",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:i});return{bindGroupLayout:o,bindGroup:a,pipeline:s}}function lt(t,e,r){let{device:o}=t,a=r.beginRenderPass({colorAttachments:[{view:e.refs.out,clearValue:t.clearValue,loadOp:"load",storeOp:"store"}]});a.setPipeline(e.data.pipeline),a.setBindGroup(0,e.data.bindGroup),a.draw(6,1,0,0),a.end()}function ft(t,e){let{device:r}=t;e.data.bindGroup=r.createBindGroup({layout:e.data.bindGroupLayout,entries:[{binding:0,resource:e.refs.in.data.view},{binding:1,resource:e.refs.in.data.sampler}]})}var de="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@vertex fn vs_main(@location(0)vertexPosition:vec2<f32>)->@builtin(position)vec4<f32>{var sx:f32=1.0;var sy:f32=1.0;var sz:f32=1.0;var rot:f32=0.0;var tx:f32=1.0;var ty:f32=1.0;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;return transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,0.0,1.0);}@fragment fn fs_main()->@location(0)vec4<f32>{return vec4<f32>(1.0,0.0,0.0,1.0);}";var me=y.create(0,0,0);function dt(t){return[-t[1],t[0]]}var xe={type:"primitives",refs:[{name:"color",type:"textView",format:"rgba8unorm",access:"write"}],onInit:async function(t,e={}){return mt(t,e)},onRun:function(t,e,r){vt(t,e,r)},onDestroy:function(t,e){xt(e)},onResize:function(t,e){ve(t,e)},onViewportPosition:function(t,e){ve(t,e)},customFunctions:{addLine:function(t,e,r,o,a=1){let i=A.sub(o,r),s=A.normalize(i),u=dt(s),n=a/2,c=e.data.vertexCount;e.data.vertices[c+0]=r[0]+u[0]*n,e.data.vertices[c+1]=r[1]+u[1]*n,e.data.vertices[c+2]=r[0]-u[0]*n,e.data.vertices[c+3]=r[1]-u[1]*n,e.data.vertices[c+4]=o[0]+u[0]*n,e.data.vertices[c+5]=o[1]+u[1]*n,e.data.vertices[c+6]=r[0]-u[0]*n,e.data.vertices[c+7]=r[1]-u[1]*n,e.data.vertices[c+8]=o[0]+u[0]*n,e.data.vertices[c+9]=o[1]+u[1]*n,e.data.vertices[c+10]=o[0]-u[0]*n,e.data.vertices[c+11]=o[1]-u[1]*n,e.data.vertexCount+=12,t.device.queue.writeBuffer(e.data.vertexBuffer,0,e.data.vertices.buffer)},clear:function(t,e){e.data.vertexCount=0}}};async function mt(t,e){let{device:r}=t,o=new Float32Array(1e4),a=r.createBuffer({size:o.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),i=r.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),s=r.createShaderModule({code:de}),u=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}}]}),n=r.createPipelineLayout({bindGroupLayouts:[u]}),c=r.createBindGroup({layout:u,entries:[{binding:0,resource:{buffer:i}}]}),l=r.createRenderPipeline({layout:n,vertex:{module:s,entryPoint:"vs_main",buffers:[{arrayStride:2*Float32Array.BYTES_PER_ELEMENT,attributes:[{shaderLocation:0,offset:0,format:"float32x2"}]}]},fragment:{module:s,entryPoint:"fs_main",targets:[{format:"bgra8unorm"}]},primitive:{topology:"triangle-list"}});return{uniformBuffer:i,vertexBuffer:a,pipeline:l,bindGroup:c,vertexCount:0,vertices:o}}function vt(t,e,r){if(e.data.vertexCount===0)return;let{device:o}=t,a=e.options.loadOp||"load",i=r.beginRenderPass({colorAttachments:[{view:e.refs.color,clearValue:t.clearValue,loadOp:a,storeOp:"store"}]});i.setPipeline(e.data.pipeline),i.setBindGroup(0,e.data.bindGroup),i.setVertexBuffer(0,e.data.vertexBuffer),i.draw(e.data.vertexCount),i.end()}function xt(t){t.data.vertexBuffer.destroy(),t.data.vertexBuffer=null,t.data.uniformBuffer.destroy(),t.data.uniformBuffer=null}function ve(t,e){let{device:r}=t,o=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,i=b.ortho(0,o,a,0,-10,10);y.set(-w(t.viewport.position[0]),-w(t.viewport.position[1]),0,me);let s=b.translation(me);r.queue.writeBuffer(e.data.uniformBuffer,0,s.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,i.buffer)}function q(t){let e=new Float32Array([-1,-1,0,1,1,-1,1,1,1,1,1,0,-1,-1,0,1,1,1,1,0,-1,1,0,0]),r=GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST,o={size:e.byteLength,usage:r,mappedAtCreation:!0},a=t.createBuffer(o);return new Float32Array(a.getMappedRange()).set(e),a.unmap(),{buffer:a,bufferLayout:{arrayStride:16,attributes:[{shaderLocation:0,format:"float32x2",offset:0},{shaderLocation:1,format:"float32x2",offset:8}]}}}var W="struct TransformData{viewOffset:vec2<f32>,viewportSize:vec2<f32>,inverseAtlasTextureSize:vec2<f32>,tileSize:f32,inverseTileSize:f32,};struct TileScroll{scrollScale:vec2<f32>};@binding(0)@group(0)var<uniform> myScroll:TileScroll;@binding(1)@group(0)var tileTexture:texture_2d<f32>;@binding(2)@group(0)var tileSampler:sampler;@binding(0)@group(1)var<uniform> transformUBO:TransformData;@binding(1)@group(1)var atlasTexture:texture_2d<f32>;@binding(2)@group(1)var atlasSampler:sampler;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>};@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec2<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;let inverseTileTextureSize=1/vec2<f32>(textureDimensions(tileTexture,0));var scrollScale=myScroll.scrollScale;var viewOffset:vec2<f32>=transformUBO.viewOffset*scrollScale;let PixelCoord=(vertexTexCoord*transformUBO.viewportSize)+viewOffset;output.TexCoord=PixelCoord/transformUBO.tileSize;output.Position=vec4<f32>(vertexPosition,0.0,1.0);return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>)->@location(0)vec4<f32>{var tilemapCoord=floor(TexCoord);var u_tilemapSize=vec2<f32>(textureDimensions(tileTexture,0));var tileFoo=fract((tilemapCoord+vec2<f32>(0.5,0.5))/u_tilemapSize);var tile=floor(textureSample(tileTexture,tileSampler,tileFoo)*255.0);if(tile.x==255&&tile.y==255){discard;}var u_tilesetSize=vec2<f32>(textureDimensions(atlasTexture,0))/transformUBO.tileSize;let u_tileUVMinBounds=vec2<f32>(0.5/transformUBO.tileSize,0.5/transformUBO.tileSize);let u_tileUVMaxBounds=vec2<f32>((transformUBO.tileSize-0.5)/transformUBO.tileSize,(transformUBO.tileSize-0.5)/transformUBO.tileSize);var texcoord=clamp(fract(TexCoord),u_tileUVMinBounds,u_tileUVMaxBounds);var tileCoord=(tile.xy+texcoord)/u_tilesetSize;var color=textureSample(atlasTexture,atlasSampler,tileCoord);if(color.a<=0.1){discard;}return color;}";var T=new Float32Array(8),be={type:"tileAtlas",refs:[],onInit:async function(t,e={}){return bt(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){yt(data)},onResize:function(t,e){ge(t,e)},onViewportPosition:function(t,e){ge(t,e)}};async function bt(t,e){let{device:r}=t,o=q(r),a=await S(t,"tile atlas",e.options.textureUrl),i=r.createBuffer({size:32,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),s=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),u=r.createBindGroup({layout:s,entries:[{binding:0,resource:{buffer:i}},{binding:1,resource:a.view},{binding:2,resource:a.sampler}]}),n=r.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,buffer:{}},{binding:1,visibility:GPUShaderStage.VERTEX|GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}}]}),c=r.createPipelineLayout({bindGroupLayouts:[n,s]});return{pipeline:r.createRenderPipeline({label:"tile",vertex:{module:r.createShaderModule({code:W}),entryPoint:"vs_main",buffers:[o.bufferLayout]},fragment:{module:r.createShaderModule({code:W}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}}]},primitive:{topology:"triangle-list"},layout:c}),uniformBuffer:i,atlasBindGroup:u,atlasMaterial:a,tileBindGroupLayout:n,quad:o,tileSize:e.options.tileSize,tileScale:e.options.tileScale}}function yt(t){t.atlasMaterial.texture.destroy(),t.atlasMaterial.texture=void 0}function ge(t,e){T[0]=t.viewport.position[0],T[1]=t.viewport.position[1];let r=e.data,{tileScale:o,tileSize:a}=r,i=t.viewport.width/t.viewport.zoom,s=t.viewport.height/t.viewport.zoom;T[2]=i/o,T[3]=s/o,T[4]=1/r.atlasMaterial.texture.width,T[5]=1/r.atlasMaterial.texture.height,T[6]=a,T[7]=1/a,t.device.queue.writeBuffer(r.uniformBuffer,0,T,0,8)}function X(t){let r=Object.keys(t.frames).length,o=new Float32Array(r*30),a=[],i={},s=0;for(let u in t.frames){let n=t.frames[u];a.push(u),i[u]=n.sourceSize;let c=-.5+n.spriteSourceSize.x/n.sourceSize.w,l=-.5+n.spriteSourceSize.y/n.sourceSize.h,f=-.5+(n.spriteSourceSize.x+n.spriteSourceSize.w)/n.sourceSize.w,v=-.5+(n.spriteSourceSize.y+n.spriteSourceSize.h)/n.sourceSize.h,m=[c,l,0],d=[c,v,0],x=[f,v,0],E=[f,l,0],h=0+n.frame.x/t.meta.size.w,G=0+n.frame.y/t.meta.size.h,D=0+(n.frame.x+n.frame.w)/t.meta.size.w,P=0+(n.frame.y+n.frame.h)/t.meta.size.h,M=[h,G],R=[h,P],j=[D,P],he=[D,G];o.set(m,s),o.set(M,s+3),o.set(d,s+5),o.set(R,s+8),o.set(x,s+10),o.set(j,s+13),o.set(m,s+15),o.set(M,s+18),o.set(x,s+20),o.set(j,s+23),o.set(E,s+25),o.set(he,s+28),s+=30}return{spriteMeta:i,locations:a,vertices:o}}var H="struct TransformData{view:mat4x4<f32>,projection:mat4x4<f32>};struct Sprite{translate:vec2<f32>,scale:vec2<f32>,tint:vec4<f32>,opacity:f32,rotation:f32,emissiveIntensity:f32,sortValue:f32,};struct SpritesBuffer{models:array<Sprite>,};@binding(0)@group(0)var<uniform> transformUBO:TransformData;@binding(1)@group(0)var myTexture:texture_2d<f32>;@binding(2)@group(0)var mySampler:sampler;@binding(3)@group(0)var<storage,read>sprites:SpritesBuffer;@binding(4)@group(0)var emissiveTexture:texture_2d<f32>;struct Fragment{@builtin(position)Position:vec4<f32>,@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32,};struct GBufferOutput{@location(0)color:vec4<f32>,@location(1)emissive:vec4<f32>,}@vertex fn vs_main(@builtin(instance_index)i_id:u32,@location(0)vertexPosition:vec3<f32>,@location(1)vertexTexCoord:vec2<f32>)->Fragment{var output:Fragment;var sx:f32=sprites.models[i_id].scale.x;var sy:f32=sprites.models[i_id].scale.y;var sz:f32=1.0;var rot:f32=sprites.models[i_id].rotation;var tx:f32=sprites.models[i_id].translate.x;var ty:f32=sprites.models[i_id].translate.y;var tz:f32=0;var s=sin(rot);var c=cos(rot);var scaleM:mat4x4<f32>=mat4x4<f32>(sx,0.0,0.0,0.0,0.0,sy,0.0,0.0,0.0,0.0,sz,0.0,0,0,0,1.0);var modelM:mat4x4<f32>=mat4x4<f32>(c,s,0.0,0.0,-s,c,0.0,0.0,0.0,0.0,1.0,0.0,tx,ty,tz,1.0)*scaleM;output.Position=transformUBO.projection*transformUBO.view*modelM*vec4<f32>(vertexPosition,1.0);output.TexCoord=vertexTexCoord;output.Tint=sprites.models[i_id].tint;output.Opacity=sprites.models[i_id].opacity;return output;}@fragment fn fs_main(@location(0)TexCoord:vec2<f32>,@location(1)Tint:vec4<f32>,@location(2)Opacity:f32)->GBufferOutput{var output:GBufferOutput;var outColor:vec4<f32>=textureSample(myTexture,mySampler,TexCoord);output.color=vec4<f32>(outColor.rgb*(1.0-Tint.a)+(Tint.rgb*Tint.a),outColor.a*Opacity);let emissive=textureSample(emissiveTexture,mySampler,TexCoord);output.emissive=vec4(emissive.rgb,1.0)*emissive.a;return output;}";var ye=y.create(0,0,0),Se={type:"spritesheet",refs:[],onInit:async function(t,e={}){return St(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){wt(e)},onResize:function(t,e){_e(t,e)},onViewportPosition:function(t,e){_e(t,e)}};async function St(t,e){let{canvas:r,device:o}=t,a=await Tt(e.options.spriteSheetJsonUrl);a=X(a);let i=V(o,a),[s,u]=await Promise.all([S(t,"sprite",e.options.colorTextureUrl,"rgba8unorm"),S(t,"emissive sprite",e.options.emissiveTextureUrl,"rgba8unorm")]);r.style.imageRendering="pixelated";let n=o.createBuffer({size:64*2,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST}),c=o.createBindGroupLayout({entries:[{binding:0,visibility:GPUShaderStage.VERTEX,buffer:{}},{binding:1,visibility:GPUShaderStage.FRAGMENT,texture:{}},{binding:2,visibility:GPUShaderStage.FRAGMENT,sampler:{}},{binding:3,visibility:GPUShaderStage.VERTEX,buffer:{type:"read-only-storage"}},{binding:4,visibility:GPUShaderStage.FRAGMENT,texture:{}}]}),l=o.createPipelineLayout({bindGroupLayouts:[c]});return{pipeline:o.createRenderPipeline({label:"sprite",vertex:{module:o.createShaderModule({code:H}),entryPoint:"vs_main",buffers:[i.bufferLayout]},fragment:{module:o.createShaderModule({code:H}),entryPoint:"fs_main",targets:[{format:"rgba16float",blend:{color:{srcFactor:"src-alpha",dstFactor:"one-minus-src-alpha"},alpha:{srcFactor:"zero",dstFactor:"one"}}},{format:"rgba16float"}]},primitive:{topology:"triangle-list"},layout:l}),uniformBuffer:n,quads:i,colorTexture:s,emissiveTexture:u,bindGroupLayout:c,spritesheet:a}}function wt(t){t.data.quads.buffer.destroy(),t.data.colorTexture.buffer.destroy(),t.data.uniformBuffer.destroy(),t.data.emissiveTexture.texture.destroy()}async function Tt(t){return(await fetch(t)).json()}function _e(t,e){let{device:r}=t,o=t.viewport.width/t.viewport.zoom,a=t.viewport.height/t.viewport.zoom,i=b.ortho(0,o,a,0,-10,10);y.set(-w(t.viewport.position[0]),-w(t.viewport.position[1]),0,ye);let s=b.translation(ye);r.queue.writeBuffer(e.data.uniformBuffer,0,s.buffer),r.queue.writeBuffer(e.data.uniformBuffer,64,i.buffer)}var we={type:"fbTexture",refs:[],onInit:async function(t,e={}){return ht(t,e)},onRun:function(t,e,r){},onDestroy:function(t,e){Te(data)},onResize:function(t,e){Et(t,e)},onViewportPosition:function(t,e){}};async function ht(t,e){let{device:r}=t,{label:o,mip_count:a,format:i,usage:s,viewportScale:u}=e.options;return g(r,o,t.viewport.width*u,t.viewport.height*u,a,i,s)}function Te(t){t.data.texture.destroy()}function Et(t,e){let{device:r}=t;Te(e);let{width:o,height:a}=t.viewport,{options:i}=e,s=e.options.viewportScale;e.data=g(r,i.label,o*s,a*s,i.mip_count,i.format,i.usage)}async function oo(t,e,r){let a=await(await navigator.gpu?.requestAdapter({powerPreference:"high-performance"}))?.requestDevice(),i=t.getContext("webgpu"),s=navigator.gpu.getPreferredCanvasFormat();return i.configure({device:a,format:s,alphaMode:"opaque"}),{nodeDefs:{tileAtlas:be,spritesheet:Se,fbTexture:we,bloom:$,composite:ee,sprite:re,tile:ie,displacement:se,overlay:fe,fbBlit:pe,primitives:xe},nodes:[],defaultTextureViewRefs:[],canvas:t,device:a,context:i,clearValue:{r:0,g:0,b:0,a:1},viewport:{width:e,height:r,zoom:1,position:[0,0]}}}function io(t,e){if(!e?.type)throw new Error("Can't define a new node missing a type.");t.nodeDefs[e.type]=e}async function ao(t,e){let r=t.nodeDefs[e?.type];if(!r)throw new Error("Can't initialize a new node missing a type.");let o={type:e.type,refs:e.refs||{},options:e.options||{},data:{},enabled:!0};for(let i in o.refs)o.refs[i]==="FRAME_TEXTURE_VIEW"&&(t.defaultTextureViewRefs.push({node:o,refName:i}),o.refs[i]=t.context.getCurrentTexture().createView());o.data=await r.onInit(t,o);let a=r.customFunctions||{};for(let i in a)o[i]=function(...s){return a[i](t,o,...s)};return t.nodes.push(o),o}function no(t){let{device:e,context:r}=t,o=e.createCommandEncoder(),a=t.context.getCurrentTexture().createView();for(let i of t.defaultTextureViewRefs)i.node.refs[i.refName]=a;for(let i of t.nodes){if(!i.enabled)continue;t.nodeDefs[i.type].onRun(t,i,o)}e.queue.submit([o.finish()])}function so(t){for(let e of t.nodes)t.nodeDefs[e.type].onDestroy(t,e);t.nodes.length=0,t.defaultTextureViewRefs.length=0}function uo(t,e,r){t.viewport.width=e,t.viewport.height=r;for(let o of t.nodes)t.nodeDefs[o.type].onResize(t,o)}function co(t,e){t.viewport.position[0]=e[0]-t.viewport.width/2/t.viewport.zoom,t.viewport.position[1]=e[1]-t.viewport.height/2/t.viewport.zoom;for(let r of t.nodes)t.nodeDefs[r.type].onViewportPosition(t,r)}export{g as createTexture,S as createTextureFromUrl,io as defineNode,no as draw,oo as init,ao as initNode,so as reset,uo as setViewportDimensions,co as setViewportPosition};
